{"pageProps":{"locale":"de","markdown":"\n# Das Wettkampfsystem\n\nDas Wettkampfsystem ist die Plattform,\nauf der die [Computerspieler](glossary/player) der einzelnen Schulen gegeneinander antreten.\nDie Teams können sich dabei nicht nur im Wettkampf,\nsondern auch in Freundschaftsspielen mit ihren Gegnern messen.\nAußerdem liefert es alle Informationen rund um den Wettkampf,\nwie z.B. die Ergebnisse der einzelnen Spieltage\noder die Anzahl der Mitglieder in den einzelnen Teams.\n\n## Die Weboberfläche\n\n![Die Startseite der Weboberfläche](/images/wettkampfsystem_startseite.jpg)\n\nDie Weboberfläche ist unter der URL <http://contest.software-challenge.de> erreichbar.\nAlle Informationen, die den Ablauf des Wettkampfs betreffen\n(z.B. Terminplan, News oder Rangliste) sind auch ohne Anmeldung verfügbar.\nMan muss sich nur am System anmelden, wenn man auf seinen Kurs,\nbzw. auf seinen Computerspieler zugreifen möchte.\nIm Wettkampfsystem findet die gesamte Wettkampfverwaltung statt.\nHier können die Clients abgegeben, getestet und aktiviert werden\nund es kann der aktuelle Wettkampfstand abgerufen werden (Rangliste, Spieltage, etc.).\n\n## Auswahl\n\nBevor man Informationen über den Wettkampf bekommt, muss man die\nbetreffende Saison und die Wettkampfgruppe auswählen. Dies ist auch wenn\nman sich anmeldet zu beachten. Über die beiden Buttons in der oberen\nLeiste, bekommt man alle verfügbaren Saisons angezeigt, und wenn man\neine ausgewählt hat, sieht man auch die Gruppen dazu. Anschließend kann\nman die Informationen einsehen. Standardmäßig ist die aktuellste Saison\nim System aktiv.\n\n## Frei verfügbare Informationen\n\n### Saison\n\n#### Aktuelles\n\nHier sind alle News zum Wettkampf einsehbar. Die neusten News werden\nauch immer oben neben dem Logo angezeigt. Alles Wichtige zum Wettkampf\nerscheint hier.\n\n### Wettkampf\n\n#### Spieltage\n\n![Screenshot des Terminplans](/images/wettkampfsystem_terminplan.jpg)\n\nDer Terminplan kann erst aufgerufen werden, wenn die einzelnen Spieltage\nfür den Wettkampf feststehen und eine Gruppe ausgewählt wurde. Die\nblauen Einträge im Kalender zeigen an, welche Spieltage noch austehen,\nwärend die grünen schon gespielt sind. Mit einem Klick auf einen Eintrag\ngelangt man direkt zur Spieltagübersicht.\n\n#### XX. Spieltag\n\n![wettkampfsystem spieltaguebersicht](/images/wettkampfsystem_spieltaguebersicht.jpg)\n\nAuf dieser Seite kann man sehen, welche Schulen an dem Spieltag\naufeinander treffen bzw. trafen. Wurde der Spieltag schon ausgetragen,\nkann man sich die Ergebnisse und den Verlauf der einzelnen Spiele\nanschauen.\n\n#### Rangliste\n\n![Screenshot der Rangliste](/images/wettkampfsystem_rangliste.jpg)\n\nDer Link erscheint erst, wenn der Wettkampf gestartet wurde. Auf dieser\nSeite gibt es drei Tabellen:\n\n-   Die Hauptrangliste: Hier können die einzelnen Teams sehen, wo sie im\n    Vergleich zu allen Kontrahenten stehen.\n\n-   Aufteilung nach Teamerfahrung: Zu Beginn einer neuen Runde der\n    Software-Challenge werden die Teams von den Organisatoren nach\n    Rücksprache mit den Lehrkräften in Einsteiger oder Fortgeschritten\n    eingestuft. So kann für die Einsteiger eine separate Rangliste\n    angezeigt werden und die Teams können ihre Leistung besser\n    einschätzen. Diese Einstufung hat weder Auswirkungen auf den Verlauf\n    der Software-Challenge, noch auf die Vergabe der Preise.\n\n#### Finale\n\nHier findet sich die Übersicht über die Finalteilnehmer. Diese ist erst\nverfügbar, wenn die Teilnehmer feststehen.\n\n### Teams\n\n#### Alle Teams\n\n![Die Teamtabelle](/images/wettkampfsystem_teamtabelle.jpg)\n\nHier werden die teilnehmenden Teams mit ihren Ansprechpartnern und\nTutoren tabellarisch aufgelistet. Durch einen Klick auf die Lupe gelangt\nman zur Begegnungsliste für das entsprechende Team.\n\n#### Meine Teams\n\nAngemeldete Benutzer können hier eine Übersicht über die von Ihnen\nbetreuten Teams finden.\n\n## Nur mit Anmeldung verfügbar\n\n### Verbindlich anmelden\n\n![Link zur verbindlichen Anmeldung](/images/wettkampfsystem_verbindliche_anmeldung.jpg)\n\nVor der Wettkampfphase muss man ein oder mehrere vorangemeldete Teams\nverbindlich anmelden. Hierzu klickt man nach dem Login auf den Link\n\"Teams verbindlich anmelden\" unten auf der Startseite (siehe Bild). Auf\nder folgenden Seite wird eine Liste der eigenen Teams angezeigt. Um ein\nTeam verbindlich anzumelden, klickt man in der Spalte \"Teilnahme\" auf\ndie Checkbox (![Checkbox zur verbindlichen Anmeldung](/images/wettkampfsystem_unchecked.png)).\n\n### Meine Teams\n\nHier sind alle Teams aufgelistet, auf die man Zugriff hat. Mit einem\nKlick auf die Lupe am Ende der Zeile gelangt man in die Teamdetails.\n\n#### Personen\n\n![Dialog](/images/wettkampfsystem_neue_person.jpg)\n\nHier werden alle Personen des Teams augelistet.\n\n##### Person hinzufügen\n\nNeue Personen kann man über die Schaltfläche \"Person hinzufügen\" am\noberen Bildschirmrand einladen. Dabei können Tutoren sowohl Lehrkräfte, als auch Schülerinnen und\nSchüler hinzufügen, während Lehrkräfte nur Schülerinnen und Schüler hinzufügen dürfen.\nSchülerinnen und Schüler haben in dieser Hinsicht keinerlei Rechte.\n\n**Hinweis:** Es muss nicht jede Schülerin und jeder Schüler eingetragen werden und über\nZugangsdaten erhalten. Es reicht, wenn sich die Teammitglieder am Server\nanmelden können, die den :t[Computerspieler]{#player} hochladen.\n\nMit den Symbolen neben den Teammitgliedern kann man sich die\nPersonendetails anschauen, sie bearbeiten oder das Mitglied aus dem Team\nwerfen.\n\nWenn man eine neue Person ins Team aufnehmen will, kann man sich\nentscheiden, ob man eine neue Person erstellt oder eine im System\nbekannte Person einlädt.\n\nGanz unten auf der Personenseite kann man die Schülerinnen- und Schüler-Anzahl des Teams\neintragen. Hierzu zählen auch Schülerinnen und Schüler, die keine eigenen Zugangsdaten\nfür das Wettkampfsystem haben. Diese Zahl wird sowohl für die Presse als\nauch für statistische Zwecke gebraucht und sollte in jedem Fall stimmen.\n\n##### Benachrichtigungen\n\nFür Personen mit Zugangsdaten kann neben den Personendetails eingestellt\nwerden, unter welchen Umständen diese Personen eine e-Mail mit einer\nentsprechenden Benachrichtigung erhalten sollen. Dabei gibt es folgende\nOptionen:\n\n-   Ein Spieltag wurde gespielt\n\n-   In einem Ihrer Teams gibt es noch keinen spielbereiten\n    :t[Computerspieler]{#player} für den nahenden Spieltag\n\n-   Es gibt Neuigkeiten zum Wettbewerb\n\n-   Eines ihrer Tickets wurde geändert\n\n#### Computerspieler\n\nIn dieser Rubrik kann man die :t[Computerspieler]{#player} hochladen und verwalten.\nBevor man einen Computerspieler hochlädt, muss [er abgabefertig gemacht werden](/entwicklung/abgabe).\n\n![Übersicht der eingesendeten Computerspieler](/images/computerspieler_uebersicht.jpg)\n\nOben am rechten Rand befindet sich die Schaltfläche, um neue\nComputerspieler hinzuzufügen. Diese führt zu einem Formular, mit dem man\ndas ZIP-Archiv des Computerspielers hochladen kann.\n\n![Forumlar zum Einsenden eines Computerspielers](/images/computerspieler_hochladen.jpg)\n\nMan kann dem Spieler einen **Namen** geben, damit man ihn in der Liste\nder hochgeladenen Spieler später besser erkennt. Man kann auch noch\nzusätzliche **Parameter** festlegen, die dem Computerspieler beim Start\nübergeben werden. Dies ist nützlich, wenn der Computerspieler\nverschiedene Spielstrategien unterstützt und man diese per Parameter\nauswählen kann. Dann muss man den Computerspieler nur einmal hochladen\n(die Parameter kann man auch später verändern). Die Angabe eines Namens\nund von Parametern ist optional.\n\nAls letztes muss noch die Umgebung (das **Docker Image**) gewählt\nwerden, in der der Computerspieler auf dem Wettkampfsystem ausgeführt\nwerden soll. Verwendet der Computerspieler eine der beiden offiziell\nunterstützten Programmiersprachen Java und Ruby, kann hier einfach das\nentsprechende ausgewählt werden. Ansonsten hängt es von der gewählten\nProgrammiersprache ab, ob eine passende Umgebung angeboten wird. Sollte\nsich nichts finden, installieren wir gern etwas passendes nach.\n\nWurde ein Spieler erfolgreich hochgeladen, befindet er sich in der Liste\naller Spieler des Teams. Hier kann man mit dem Link \"Testen\" seine\nTurnierfähigkeit prüfen. Der Spieler spielt dann zweimal gegen den\nZufallsspieler. Ein Haken in einem grünen Kreis symbolisiert einen\nerfolgreichen Test. Das Logbuch über den Testlauf kann mit dem Link\n\"Logs\" aufgerufen werden. Unter Umständen muss noch die richtige\nStartdatei eingestellt werden. Dafür kann man rechts in der Spalte\n\"Hauptdatei\" auf den entsprechenden Link klicken und im folgenden\nDateimenü die richtige Startdatei auswählen.\n\nMit dem '+' kann man einen Kommentar an den Computerspieler heften,\nso dass man ihn besser von den anderen unterscheiden kann.\n\nMit dem Link \"Aktivieren\" markiert man den Spieler als denjenigen, der\ndas nächste Spiel auf dem Wettkampfsystem spielen soll. Dies kann ein\nFreundschaftsspiel oder ein Spiel des Wettkampfes sein.\n\n**Hinweis:** Es nimmt der jeweils aktive Computerspieler am Spieltag\nteil. Die Frist für das Aktivieren eines Clients, der an einem Spieltag\nteilnehmen soll, endet am Spieltag um 0 Uhr. Bei späterer Aktivierung\nkann nicht garantiert werden, dass der neue statt des bisherigen Clients\nam Spieltag teilnimmt. Ist an einem Spieltag kein Computerspieler\naktiviert, nimmt das Team nicht an der Begegnung dieses Spieltages teil\nund die betreffenden Spiele zählen als verloren.\n\n### Freundschaftsspiele\n\nUm sich schon vor dem Wettkampf einen Eindruck von der Stärke des\neigenen Teams zu machen, kann man mit seinen Gegnern Freundschaftsspiele\nabsolvieren.\n\nUm ein Freundschaftsspiel zu spielen gibt es zwei Möglichkeiten: Man\nfordert einen (oder alle) Gegner heraus oder man nimmt eine\nHerausforderung an.\n\nDurch einen Klick auf das Ergebnis eines gespielten Freundschaftsspiels\nkann man es sich im Detail anschauen.\n\n## Verfügbare Schnittstellen\n\nIm folgenden können Schnittstellen gefunden werden mit denen man mit dem\nWettkampfsystem interagieren kann.\n\n### Replays\n\nMan kann direkt auf unter \"Replay herunterladen\" auf der jeweiligen\nMatch-Seite einen Link finden, der z.B. wie folgt aussieht:\n`…​/wettbewerb/2010/spieltage/XXXX/matches/XXXX/rounds/XXXX` bei einem\nnormalen GET-Request erhält man das Replay-Archiv (also ein GZip\nArchiv). Um die Replays z.B. in einer eigenen Anwendung zu verwenden,\nkann man sich auch vom Server bereits entpackte und an das Format des\nReplay-Viewers angepasste XML-Files zurückgeben lassen. Dies kann zum\nEinen durch einen XML-Header des Requests geschehen oder zum Anderen\neinfach durch das Anhängen der Endung `.xml` an den oben genannten Link.\n\nWenn größere Mengen Replays benötigt werden, empfehlen wir die\nStandard-Archive vorzuziehen und dann lokal zu entpacken, da diese schon\nfertig gepackt auf dem Server vorliegen und somit schneller und mit\nweniger Last für das System zur Verfügung gestellt werden können.\n","data":{"name":"Wettkampfsystem","index":3},"references":[{"folder":"book","path":{"directory":"","absolute":"/home/runner/work/docs/docs/hyperbook/.hyperbook/book/glossar.md","relative":"glossar.md","href":"/glossar"},"extension":".md","name":"glossar","root":"/home/runner/work/docs/docs/hyperbook/.hyperbook","markdown":{"content":"\n## Spielinfrastruktur\n\n:t[Computerspieler]{#player}\n\n:t[Spielleiter]{#server}\n\n:t[Wettkampfsystem]{#contest}\n","data":{"name":"Technische Grundlagen","index":2}}},{"folder":"book","path":{"directory":"","absolute":"/home/runner/work/docs/docs/hyperbook/.hyperbook/book/wettkampf.md","relative":"wettkampf.md","href":"/wettkampf"},"extension":".md","name":"wettkampf","root":"/home/runner/work/docs/docs/hyperbook/.hyperbook","markdown":{"content":"\n# Ablauf des Wettkampfs\n\nDie Software-Challenge wird in drei Phasen ausgespielt.\n\n## Die Meisterschaftsphase\n\nIn dieser ersten Phase (Anfang März bis Anfang April)\nwird in Gruppen mit je ca. 20 Teams gespielt.\n\nDie Meisterschaft ist in Spieltagen organisiert.\nAn jedem Spieltag hat jedes Team eine Begegnung mit einem anderen Team.\nBei einer ungeraden Teamanzahl in einer der Gruppen setzt an jedem Spieltag eines der Teams aus.\n\nVor Beginn des ersten Spieltages soll jedes Team einen funktionsfähigen\n:t[Computerspieler]{#player} über das Online-Abgabesystem eingeschickt haben. Zwischen den\nSpieltagen besteht die Möglichkeit, Clients ebenfalls über dieses System\nzu aktualisieren. Über das Online-Abgabesystem werden auch die\nErgebnisse, Ranglisten etc. veröffentlicht.\n\nEine Begegnung gewinnt derjenige Spieler mit den meisten gewonnen\nSpielen in dieser Begegnung. Bei gleich vielen Siegen endet die\nBegegnung unentschieden. Eine gewonnene Begegnung zählt für die\nRangliste zwei Punkte, ein Unentschieden einen Punkt, eine verlorene\nBegegnung null Punkte.\n\nIn der Rangliste wird als nachrangiges Kriterium ausschließlich die\nAnzahl der Siegpunkte aus den bisherigen Spielen verwendet.\nWenn am Ende einer Meisterschaft zwei Teams denselben Platz belegen,\nentscheidet das Los.\n\n## Die Champions League\n\nIn diese zweite Phase (Mitte April bis Mitte Mai)\nkommen die besten acht Teams einer jeden Gruppe aus der ersten Phase.\nDie Champions League wird nach dem gleichen Schema wie eine Meisterschaft ausgespielt.\n\n## Das Final Eight\n\nAn der dritten Phase, dem Final Eight, das im Juni in Kiel stattfindet,\nnehmen die besten acht Mannschaften aus der Champions League teil.\nViertelfinale, Halbfinale, Kleines Finale (= Spiel um den 3. Platz)\nund Finale werden im K.O.-System gespielt.\n\nAnders als bei den vorherigen Phasen kann es beim Final Eight keine Begegnung geben,\ndie Unentschieden endet.\nHaben beide Teams in einer Begegnung gleich viele Siege errungen,\nwird als nachrangiges Kriterium ausschließlich die Anzahl der am Spielende erreichten Punkte berücksichtigt,\num den Sieger einer Begegnung zu ermitteln.\n\nIm Übrigen gelten beim Final Eight die bekannten Regeln der beiden vorherigen Phasen.\nEs wird dabei auch dieselbe Hardware eingesetzt.\n\n## Die Begegnungen\n\nJede Begegnung besteht aus jeweils sechs Spielen,\nwobei das Recht des ersten Zuges abwechselt.\n\nDie Zugzeit ist für jeden Zug auf zwei Sekunden begrenzt.\nDabei gilt für die Rechenzeit die im Institut verwendete Hardware als Referenz.\nJeder :t[Computerspieler]{#player} wird dabei auf einer eigenen virtuellen Maschine\nmit unten stehenden Spezifikationen ausgeführt.\n\nSollte ein Spieler einen ungültigen Zug setzen oder die maximale Zugzeit überschreiten,\nso hat dieser Spieler verloren.\nIn allen anderen Fällen wird das Spiel gemäß der Spielregeln zu Ende gespielt\nund der Gewinner ermittelt.\n\n## Die Probespieltage\n\nAnfang März, unmittelbar vor der ersten Phase,\nfinden Probespieltage statt,\ndie den reibungslosen Ablauf der Meisterschaft gewährleisten sollen.\n\n# Technische Daten für die Ausführung der Computerspieler\n\nBei allen im :t[Wettkampfsystem]{#contest} ausgetragenen Spielen\nlaufen die :t[Computerspieler]{#player} auf den Servern des Wettkampfsystems.\n\n|                  |                                                   |\n|------------------|---------------------------------------------------|\n| Betriebssystem:  | 64 Bit Linux                                      |\n| Prozessor:       | Ein Kern von einem [Intel Xeon E5-2620 v4, 2,1 GHz](https://ark.intel.com/de/products/92986/Intel-Xeon-Processor-E5-2620-v4-20M-Cache-2_10-GHz) |\n| Arbeitsspeicher: | 1,5 GB                                            |\n\n## Log-Ausgabe\n\nDie :t[Computerspieler]{#player} laufen im :t[Wettkampfsystem]{#contest} ohne eine grafische Oberfläche,\nsie können also keine Fenster oder ähnliches anzeigen.\nDer Versuch eines Computerspielers, so etwas trotzdem zu tun,\nwird wahrscheinlich zum Absturz des Computerspielers führen.\n\nDie :t[Computerspieler]{#player} können jedoch Text auf die beiden\nStandard-Ausgabedatenströme \"stdout\" und \"stderr\" schreiben.\nDiese Ausgaben finden sich dann in den Log-Dateien wieder,\ndie nach Beenden eines Spiels über das :t[Wettkampfsystem]{#contest} verfügbar sind.\n\n## Lesen von Daten\n\nZugriff auf das Internet ist nicht möglich.\nSchreiben auf die Festplatte ist möglich,\nes kann jedoch nicht auf Daten, die in früheren Spielen geschrieben wurden,\nzugegriffen werden.\n\n## Weitere Ausführungsumgebung\n\nDer :t[Computerspieler]{#player} wird in einem Docker container ausgeführt,\nwelcher die verfügbaren Bibliotheken und Programme bestimmt.\nDie verfügbaren Container-Vorlagen sind im Wettkampfsystem einsehbar,\nund bieten unter anderem Java, Python, Ruby, Node.js, Swift, .NET, C++ Boost, Tensorflow\noft in mehreren Versionen.\n\n| Bezeichnung        | Image-Name                                                                                   | Beschreibung                                                                                                               |\n| ------------------ | -------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------- |\n| Java 11             | [openjdk:11-ea-jre](https://hub.docker.com/_/openjdk/)                                       | Open Source Java Platform, Standard Edition, Version 1.8.0. Für alle :t[Computerspieler]{#player} auf Basis des Java Zufallsspielers.     |\n| Ruby 2             | [ruby:2.4.2](https://hub.docker.com/_/ruby/) mit installiertem Software-Challenge-Computerspieler-Gem | Ruby Interpreter, Version 2.4.2. Für alle :t[Computerspieler]{#player} auf Basis des Ruby Zufallsspielers.                                |\n| Python 3           | [python:3.6.3](https://hub.docker.com/_/python/)                                             | Python Interpreter, Version 3.6.3. Für selbst entwickelte :t[Computerspieler]{#player} in Python.                                       |\n| Mono 5.4 (C# .NET) | [mono:5.4.1.6](https://hub.docker.com/_/mono/)                                               | Mono Laufzeitumgebung, Version 5.4.1.6. Für selbst entwickelte :t[Computerspieler]{#player} basierend auf dem Microsoft .NET Framework. |\n\nWenn Ihr :t[Computerspieler]{#player} eine speziellere Umgebung benötigt\n(zum Beispiel ein hier nicht angebotener Interpreter),\nnehmen Sie bitte mit uns Kontakt auf (<tech@software-challenge.de>).\nWir stellen gern weitere Images zur Verfügung.\n","data":{"name":"Wettkampfmodalitäten","index":3}}},{"folder":"book","path":{"directory":"entwicklung","absolute":"/home/runner/work/docs/docs/hyperbook/.hyperbook/book/entwicklung/abgabe.md","relative":"entwicklung/abgabe.md","href":"/entwicklung/abgabe"},"extension":".md","name":"abgabe","root":"/home/runner/work/docs/docs/hyperbook/.hyperbook","markdown":{"content":"\n# Computerspieler abgabefertig machen\n\nDamit das :t[Wettkampfsystem]{#contest} mit dem :t[Computerspieler]{#player} arbeiten kann,\nmuss er als ausführbares Programm in ein ZIP-Archiv verpackt werden.\n\nJe nach Programmiersprache, in der der Spieler entwickelt wurde,\nsind unterschiedliche Schritte notwendig.\n\n:::alert{info}\nIn der Regel enthält die Spielervorlage alle nötigen Instruktionen zum Packen.\n:::\n\n### Offizielle Spielervorlagen\n- [Java](https://github.com/software-challenge/backend/blob/main/player/configuration/README.md)\n- [Ruby](https://github.com/software-challenge/client-ruby/blob/main/README.md)\n\n### Inoffizielle Spielervorlagen\n- [C#](https://github.com/jnccd/socha-client-csharp/blob/master/README.md)\n- [C++](https://github.com/Estugon/sc-penguins-cpp/blob/main/README.md)\n- [Python](https://github.com/FalconsSky/socha-python-client/blob/master/README.md)\n- [Rust](https://github.com/fwcd/socha-client-rust-2023/blob/main/README.md)\n- [Swift](https://github.com/matthesjh/sc23-swift-client/blob/main/README.md)\n\nDas Hochladen des Spielers im Wettkampfsystem wird detailliert \nunter :t[Wettkampfsystem->Computerspieler]{#contest.computerspieler} beschrieben.\n\n## Andere Programmiersprache\n\nBei Computerspielern in einer anderen Programmiersprache \nmuss das ZIP-Archiv ein Shell-Script \nmit genauen Instruktionen zum Start des Computerspielers enthalten.\nDieses muss nach dem Hochladen im Wettkampfystem \nals Hauptdatei ausgewählt werden.\n\nBeachten Sie hierbei, dass diesem Script vom Wettkampfsystem Parameter übergeben werden,\ndie an Ihr Programm weitergegeben werden müssen.\nDiese Parameter sind mindestens Host und Port des Spielservers \nsowie die Reservierungsnummer des Spiels, dem der Computerspieler beitreten soll.\nEin Aufruf sieht also in etwa wie folgt aus\n(falls `start.sh` als Hauptdatei eingestellt ist):\n\n    start.sh -h gameserver -p 13050 -r 590e5e6f-cf93-488e-a12d-5c194ecf95c2\n\nDie Parameter folgen dabei den \n[GNU Getopt Konventionen](https://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html#Argument-Syntax).\nDas heißt, die drei Parameter können in beliebiger Reihenfolge \nund als kurze oder lange Version übergeben werden.\nFolgende Variante muss also auch von Ihrem Programm korrekt verarbeitet werden können:\n\n    start.sh --reservation 590e5e6f-cf93-488e-a12d-5c194ecf95c2 --host gameserver --port 13050\n\nAuch die grafische Oberfläche ruft Ihr Programm mit diesen Parametern auf.\nIhr Programm wird also nur von der grafischen Oberfläche richtig gestartet,\nwenn es die Parameter richtig verarbeitet.\n\nFür die meisten Programmiersprachen gibt es Bibliotheken,\ndie die Kommandozeilenparameter nach diesem Schema verarbeiten können,\nSie müssen diese Funktion also nicht unbedingt selbst implementieren.\n\nWeiterhin ist es wichtig, den Interpreter in der ersten Zeile des Script anzugeben, \nda das Script nicht von einer Shell aufgerufen wird.\nEin `start.sh` Script sieht also in etwa so aus:\n\n    #!/bin/sh\n    chmod +x hauptprogramm_dateiname\n    ./hauptprogramm_dateiname \"$@\"\n\n-   Script soll von `/bin/sh` interpretiert werden, es ist also ein einfaches Shell-Script.\n-   Die Binärdatei wird ausführbar gemacht (das ist nötig, da in einem ZIP-Archiv das Ausführbar-Attribut nicht gespeichert wird).\n-   Die Binärdatei wird aufgerufen und alle Parameter, die das Script bekommen hat, werden weitergereicht (`\"$@\"`).\n\nDie `start.sh` muss in UTF-8 und mit UNIX(LF) Zeilenenden kodiert sein.\nAndere Kodierungen führen zu Fehlern bei der Ausführung auf dem Server.\nIn Notepad++ kann die Kodierung einfach in dem Tab `Kodierung` angepasst werden,\ndie Zeilenenden in `Bearbeiten > Format Zeilenende`.\n\nBei kompilierten Sprachen müssen die Spieler für 64bit Linux kompiliert werden,\nbei interpretierten Sprachen muss ein passender Interpreter \nauf dem :t[Wettkampfsystem]{#contest} vorhanden sein.\nWeiterhin müssen Abhängigkeiten wie z.B. genutzte Bibliotheken vorhanden sein oder mitgeliefert werden.\n","data":{"name":"Computerspieler abgabefertig machen","index":9}}},{"folder":"book","path":{"directory":"entwicklung","absolute":"/home/runner/work/docs/docs/hyperbook/.hyperbook/book/entwicklung/index.md","relative":"entwicklung/index.md","href":"/entwicklung"},"extension":".md","name":"index","root":"/home/runner/work/docs/docs/hyperbook/.hyperbook","markdown":{"content":"\n# Die Ersten (Programmier-)Schritte\n\nBekanntlich ist aller Anfang schwer.\nDeshalb soll hier eine kleine Hilfe gegeben werden,\ndie den Start mit der Entwicklung erleichtern soll.\n\n## Die richtige Programmiersprache\n\nAm einfachsten ist es natürlich,\neine der offiziellen Spielervorlagen (Java, Ruby, Python) als Basis zu nutzen,\nallerdings könnt ihr auch eigene Clients in anderen Sprachen schreiben.\nDas ist mit mehr Arbeit verbunden,\naber wenn ihr eine Sprache besonders gerne nutzt oder Vorteile seht,\ndann kann es sich lohnen!\n\nWenn ihr also genug Erfahrung habt und euch entscheidet den schwereren Weg zu gehen,\ndann solltet ihr euch die [XML-Dokumentation](/xml) genau anschauen,\nda ihr die ganze Kommunikation inklusive Parsen der XML-Nachrichten implementieren müsst.\nAußerdem solltet ihr euch als Beispiel\nden (inoffiziellen) [Swift Computerspieler](https://github.com/matthesjh/sc20-swift-client) ansehen.\nDas kann auch helfen, wenn man Swift nicht kann,\nda die meisten prozeduralen Programmiersprachen viele Ähnlichkeiten haben.\nSomit sollte es nicht allzu schwer sein, den Swift code in eure Sprache zu übersetzen.\nAuf ähnliche Weise können natürlich auch\n[der Java Quellcode](https://github.com/software-challenge/backend/tree/main/player/src)\nund [der C# Quellcode](https://github.com/niklasCarstensen/socha-client-csharp) helfen.\n\nAm besten sprecht ihr die Verwendung einer anderen Programmiersprache frühzeitig mit eurem Tutor ab,\ndamit sichergestellt ist, dass der :t[Computerspieler]{#player} auch am Wettkampf teilnehmen kann.\nWir stellen gerne eine passende Laufzeitumgebung auf dem :t[Wettkampfsystem]{#contest}\nfür die Programmiersprache zur Verfügung.\n\n## Weiterführende Literatur\n\nZu den meisten Programmiersprachen existieren umfassende Dokumentationen.\nEinige Empfehlenswerte werden hier aufgeführt.\nDer geneigte Leser ist eingeladen, in dem entsprechenden Bereich eigene Empfehlungen hinzuzufügen.\n\n### Java\n\nDie umfassende (englischsprachige) offizielle Dokumentation zu Java\nist einsehbar [bei Oracle](https://docs.oracle.com/en/java/javase/11/core/java-core-libraries1.html).\nAls deutschsprachiges Referenzwerk ist das Buch \"Java ist auch eine Insel\" empfehlenswert,\nwelches man bei Galileo Computing als\n[Open-Book](http://openbook.galileocomputing.de/javainsel)\nkostenlos online betrachten und herunterladen kann.\nMan kann es dort ebenfalls als gedruckte Ausgabe bestellen.\n","data":{"name":"Entwicklung eines Computerspielers","index":2}}},{"folder":"book","path":{"directory":"spiele/piranhas/spielregeln","absolute":"/home/runner/work/docs/docs/hyperbook/.hyperbook/book/spiele/piranhas/spielregeln/regeln.md","relative":"spiele/piranhas/spielregeln/regeln.md","href":"/spiele/piranhas/spielregeln/regeln"},"extension":".md","name":"regeln","root":"/home/runner/work/docs/docs/hyperbook/.hyperbook","markdown":{"content":"[PDF-Version dieses Dokumentes](regeln.pdf)\n\nWir freuen uns über sämtliche Verbesserungsvorschläge.  \nDie Dokumentation kann [direkt auf\nGitHub](https://github.com/software-challenge/docs) editiert werden,\neinzige Voraussetzung ist eine kostenlose Registrierung bei GitHub. Ist\nman angemeldet, kann man ein Dokument auswählen (ein guter Startpunkt\nist die Datei\n[index.md](https://github.com/software-challenge/docs/blob/main/index.md)\nwelche Verweise auf alle Sektionen der Dokumentation enthält) und dann\nauf den Stift oben rechts klicken. Damit wird von GitHub automatisch ein\nFork und ein Pull Request erstellt.  \nAlternativ auch gern eine E-Mail an <info@software-challenge.de> oder\neine Nachricht im [Discord](https://discord.gg/jhyF7EU).\n\nDas Spielfeld ist ein Aquarium (10x10 Schachbrett mit Spalten A-J und\nZeilen 0-9), ein Spieler spielt die roten, der andere die blauen Fische.\n\n# Anfangsaufstellung\n\n-   8 rote Fische auf den (Schachbrett-)Feldern A1-A8\n\n-   8 rote Fische auf den Feldern J1-J8\n\n-   8 blaue Fische auf den Feldern B0-I0\n\n-   8 blaue Fische auf den Feldern B9-I9\n\nAuf dem Spielfeld gibt es im inneren 6x6-Bereich zwei zufällig\ngenerierte Kraken-Felder, die zwar durchschwommen werden können, auf\ndenen jedoch kein Zug enden darf. Diese Felder behindern also die\nSchwarmbildung. Die beiden zufällig generierten Felder befinden sich\nweder in derselben Zeile noch in derselben Spalte, noch in derselben\nDiagonale.\n\n# Ziel des Spieles\n\nAlle Fische der eigenen Farbe sollen zu einem Schwarm verbunden werden,\nsie sollen also auf einem zusammenhängenden Gebiet auf dem Spielfeld\nstehen, wobei senkrecht, waagerecht und diagonal nebeneinanderliegende\nFelder als zusammenhängend gelten.\n\n# Züge\n\nEs wird abwechselnd gezogen, wobei Rot beginnt. Jede Runde macht jeder\nSpieler einen Zug. In jedem Zug muss man einen eigenen Fisch auf einer\nsenkrechten, waagerechten oder diagonalen Linie genau so viele Felder in\neine Richtung bewegen, wie insgesamt Fische (beider Farben) auf dieser\nLinie sind.\n\nDabei muss man auf einem leeren Feld oder auf einem vom Gegner besetzten\nFeld landen. Beim Zug darf man Felder mit eigenen Fischen sowie Kraken\nüberspringen, nicht aber Felder mit gegnerischen Fischen. Sollte ein\ngegnerischer Fisch im Weg sein, ist der entsprechende Zug ungültig. Bei\nder Anzahl der zu ziehenden Felder werden übersprungene Felder\nmitgezählt. Wenn man auf einem Feld ankommt, auf dem ein gegnerischer\nFisch schwimmt, wird dieser gefressen (ersatzlos vom Spielfeld\nentfernt).\n\nZum Beispiel kann Rot im 1. Zug einen beliebigen roten Fisch zwei Felder\nin Richtung der Spielfeldmitte bewegen, z.B. von A4 nach C4. Eine andere\nMöglichkeit für den 1. Zug wäre, einen Fisch von A1 nach A9 zu ziehen.\nMan könnte auch mit dem Fisch auf A2 den gegnerischen Fisch auf C0\nfressen.\n\n# Spielende\n\nDas Spiel endet, wenn am Ende einer Runde alle auf dem Spielfeld\nverbliebenen Fische einer Farbe zu einem einzigen zusammenhängenden\nSchwarm verbunden sind, spätestens jedoch nach 30 Runden. (Blau könnte\nalso einen roten Schwarm noch in der 2. Hälfte einer Runde wieder\nzerstören.) Das Spiel endet ebenfalls, wenn einer der Spieler keinen\nregulären Zug machen kann. In diesem Fall hat dieser Spieler verloren.\n\n# Gewinner\n\nFalls beim Spielende die Fische nur eines Spielers zu einem einzigen\nzusammenhängenden Schwarm verbunden sind, hat dieser Spieler gewonnen;\nanderenfalls derjenige Spieler mit dem größeren Schwarm. Falls nach den\nvorgenannten Kriterien kein Gewinner ermittelt werden kann, endet das\nSpiel unentschieden.\n\nNachrangiges Kriterium für das Ranking im :t[Wettkampfsystem]{#contest}: Anzahl der\nFische im größten Schwarm des Spielers.\n\nBeim Final Eight gibt es kein nachrangiges Kriterium. Beim Final Eight\ngewinnt derjenige Spieler eine Begegnung, der nach einer geraden Anzahl\nvon Spielen (mindestens 6) mehr Spiele als der Gegner gewonnen hat.\n","data":{}}}],"navigation":{"next":{"name":"Überblick","index":1,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/index.md","href":"/"},"current":null,"previous":null,"sections":[{"name":"Spiele","index":1,"virtual":true,"isEmpty":true,"pages":[],"sections":[{"name":"Blokus","hide":true,"isEmpty":false,"pages":[],"sections":[{"name":"Spielregeln","hide":true,"isEmpty":true,"pages":[{"name":"content","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/spielregeln/content.md","href":"/spiele/blokus/spielregeln/content"},{"name":"regeln","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/spielregeln/regeln.md","href":"/spiele/blokus/spielregeln/regeln"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/spielregeln/index.md","href":"/spiele/blokus/spielregeln"},{"name":"XML-Dokumentation","hide":true,"isEmpty":true,"pages":[{"name":"einleitung-xml","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/einleitung-xml.md","href":"/spiele/blokus/xml-dokumentation/einleitung-xml"},{"name":"spiel-betreten","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spiel-betreten.md","href":"/spiele/blokus/xml-dokumentation/spiel-betreten"},{"name":"spiel-verlassen","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spiel-verlassen.md","href":"/spiele/blokus/xml-dokumentation/spiel-verlassen"},{"name":"spielergebnis","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spielergebnis.md","href":"/spiele/blokus/xml-dokumentation/spielergebnis"},{"name":"spielstatus","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spielstatus.md","href":"/spiele/blokus/xml-dokumentation/spielstatus"},{"name":"spielsteine","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spielsteine.md","href":"/spiele/blokus/xml-dokumentation/spielsteine"},{"name":"spielverlauf","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spielverlauf.md","href":"/spiele/blokus/xml-dokumentation/spielverlauf"},{"name":"xml-dokumentation","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/xml-dokumentation.md","href":"/spiele/blokus/xml-dokumentation/xml-dokumentation"},{"name":"zuege-senden","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/zuege-senden.md","href":"/spiele/blokus/xml-dokumentation/zuege-senden"},{"name":"zug-anforderung","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/zug-anforderung.md","href":"/spiele/blokus/xml-dokumentation/zug-anforderung"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/index.md","href":"/spiele/blokus/xml-dokumentation"}],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/index.md","href":"/spiele/blokus"},{"name":"Hase und Igel","hide":true,"isEmpty":false,"pages":[],"sections":[{"name":"Spielregeln","hide":true,"isEmpty":true,"pages":[{"name":"beispiel","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/beispiel.md","href":"/spiele/hase-und-igel/spielregeln/beispiel"},{"name":"felder","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/felder.md","href":"/spiele/hase-und-igel/spielregeln/felder"},{"name":"regeln","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/regeln.md","href":"/spiele/hase-und-igel/spielregeln/regeln"},{"name":"spielbeginn","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/spielbeginn.md","href":"/spiele/hase-und-igel/spielregeln/spielbeginn"},{"name":"spielende","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/spielende.md","href":"/spiele/hase-und-igel/spielregeln/spielende"},{"name":"zuege","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/zuege.md","href":"/spiele/hase-und-igel/spielregeln/zuege"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/index.md","href":"/spiele/hase-und-igel/spielregeln"},{"name":"Tutorial","hide":true,"isEmpty":true,"pages":[{"name":"board","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/board.md","href":"/spiele/hase-und-igel/tutorial/board"},{"name":"game-rule-logic","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/game-rule-logic.md","href":"/spiele/hase-und-igel/tutorial/game-rule-logic"},{"name":"player","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/player.md","href":"/spiele/hase-und-igel/tutorial/player"},{"name":"start","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/start.md","href":"/spiele/hase-und-igel/tutorial/start"},{"name":"tutorial","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/tutorial.md","href":"/spiele/hase-und-igel/tutorial/tutorial"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/index.md","href":"/spiele/hase-und-igel/tutorial"},{"name":"XML-Dokumentation","hide":true,"isEmpty":true,"pages":[{"name":"einleitung-xml","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/einleitung-xml.md","href":"/spiele/hase-und-igel/xml-dokumentation/einleitung-xml"},{"name":"fehler","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/fehler.md","href":"/spiele/hase-und-igel/xml-dokumentation/fehler"},{"name":"spiel-betreten","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/spiel-betreten.md","href":"/spiele/hase-und-igel/xml-dokumentation/spiel-betreten"},{"name":"spiel-verlassen","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/spiel-verlassen.md","href":"/spiele/hase-und-igel/xml-dokumentation/spiel-verlassen"},{"name":"spielergebnis","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/spielergebnis.md","href":"/spiele/hase-und-igel/xml-dokumentation/spielergebnis"},{"name":"spielstatus","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/spielstatus.md","href":"/spiele/hase-und-igel/xml-dokumentation/spielstatus"},{"name":"spielverlauf","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/spielverlauf.md","href":"/spiele/hase-und-igel/xml-dokumentation/spielverlauf"},{"name":"xml-dokumentation","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/xml-dokumentation.md","href":"/spiele/hase-und-igel/xml-dokumentation/xml-dokumentation"},{"name":"zuege-senden","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/zuege-senden.md","href":"/spiele/hase-und-igel/xml-dokumentation/zuege-senden"},{"name":"zug-anforderung","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/zug-anforderung.md","href":"/spiele/hase-und-igel/xml-dokumentation/zug-anforderung"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/index.md","href":"/spiele/hase-und-igel/xml-dokumentation"}],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/index.md","href":"/spiele/hase-und-igel"},{"name":"Hey, Danke für den Fisch!","hide":true,"expanded":true,"isEmpty":false,"pages":[{"name":"Spielregeln","index":1,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/penguins/regeln.md","href":"/spiele/penguins/regeln"},{"name":"XML-Schnittstelle","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/penguins/xml.md","href":"/spiele/penguins/xml"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/penguins/index.md","href":"/spiele/penguins"},{"name":"Hive","hide":true,"isEmpty":false,"pages":[],"sections":[{"name":"Spielregeln","hide":true,"isEmpty":true,"pages":[{"name":"regeln","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/spielregeln/regeln.md","href":"/spiele/hive/spielregeln/regeln"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/spielregeln/index.md","href":"/spiele/hive/spielregeln"},{"name":"XML-Dokumention","hide":true,"isEmpty":true,"pages":[{"name":"einleitung-xml","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/einleitung-xml.md","href":"/spiele/hive/xml-dokumentation/einleitung-xml"},{"name":"fehler","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/fehler.md","href":"/spiele/hive/xml-dokumentation/fehler"},{"name":"spiel-betreten","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/spiel-betreten.md","href":"/spiele/hive/xml-dokumentation/spiel-betreten"},{"name":"spiel-verlassen","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/spiel-verlassen.md","href":"/spiele/hive/xml-dokumentation/spiel-verlassen"},{"name":"spielergebnis","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/spielergebnis.md","href":"/spiele/hive/xml-dokumentation/spielergebnis"},{"name":"spielstatus","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/spielstatus.md","href":"/spiele/hive/xml-dokumentation/spielstatus"},{"name":"spielverlauf","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/spielverlauf.md","href":"/spiele/hive/xml-dokumentation/spielverlauf"},{"name":"xml-dokumentation","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/xml-dokumentation.md","href":"/spiele/hive/xml-dokumentation/xml-dokumentation"},{"name":"zuege-senden","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/zuege-senden.md","href":"/spiele/hive/xml-dokumentation/zuege-senden"},{"name":"zug-anforderung","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/zug-anforderung.md","href":"/spiele/hive/xml-dokumentation/zug-anforderung"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/index.md","href":"/spiele/hive/xml-dokumentation"}],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/index.md","href":"/spiele/hive"},{"name":"Mississippi Queen","expanded":true,"isEmpty":false,"pages":[{"name":"Spielregeln","index":1,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/mississippi-queen/regeln.md","href":"/spiele/mississippi-queen/regeln"},{"name":"XML-Elemente","index":2,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/mississippi-queen/xml.md","href":"/spiele/mississippi-queen/xml"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/mississippi-queen/index.md","href":"/spiele/mississippi-queen"},{"name":"Ostseeschach","hide":true,"isEmpty":false,"pages":[{"name":"regeln","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/ostseeschach/regeln.md","href":"/spiele/ostseeschach/regeln"},{"name":"xml-dokumentation","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/ostseeschach/xml-dokumentation.md","href":"/spiele/ostseeschach/xml-dokumentation"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/ostseeschach/index.md","href":"/spiele/ostseeschach"},{"name":"Piranhas","hide":true,"isEmpty":false,"pages":[],"sections":[{"name":"Spielregeln","hide":true,"isEmpty":true,"pages":[{"name":"regeln","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/spielregeln/regeln.md","href":"/spiele/piranhas/spielregeln/regeln"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/spielregeln/index.md","href":"/spiele/piranhas/spielregeln"},{"name":"XML-Dokumentation","hide":true,"isEmpty":true,"pages":[{"name":"einleitung-xml","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/einleitung-xml.md","href":"/spiele/piranhas/xml-dokumentation/einleitung-xml"},{"name":"fehler","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/fehler.md","href":"/spiele/piranhas/xml-dokumentation/fehler"},{"name":"spiel-betreten","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/spiel-betreten.md","href":"/spiele/piranhas/xml-dokumentation/spiel-betreten"},{"name":"spiel-verlassen","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/spiel-verlassen.md","href":"/spiele/piranhas/xml-dokumentation/spiel-verlassen"},{"name":"spielergebnis","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/spielergebnis.md","href":"/spiele/piranhas/xml-dokumentation/spielergebnis"},{"name":"spielstatus","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/spielstatus.md","href":"/spiele/piranhas/xml-dokumentation/spielstatus"},{"name":"spielverlauf","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/spielverlauf.md","href":"/spiele/piranhas/xml-dokumentation/spielverlauf"},{"name":"xml-dokumentation","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/xml-dokumentation.md","href":"/spiele/piranhas/xml-dokumentation/xml-dokumentation"},{"name":"zuege-senden","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/zuege-senden.md","href":"/spiele/piranhas/xml-dokumentation/zuege-senden"},{"name":"zug-anforderung","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/zug-anforderung.md","href":"/spiele/piranhas/xml-dokumentation/zug-anforderung"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/index.md","href":"/spiele/piranhas/xml-dokumentation"}],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/index.md","href":"/spiele/piranhas"}],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/index.md","href":"/spiele"},{"name":"Entwicklung eines Computerspielers","index":2,"isEmpty":false,"pages":[{"name":"Das Spiel kennenlernen","index":1,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/kennenlernen.md","href":"/entwicklung/kennenlernen"},{"name":"Objektorientierte Programmierung","index":3,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/einfuehrung-oop.md","href":"/entwicklung/einfuehrung-oop"},{"name":"Sauberer Programmierstil","index":4,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/sauberer-programmierstil.md","href":"/entwicklung/sauberer-programmierstil"},{"name":"Installation von Java","index":5,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/installation-von-java.md","href":"/entwicklung/installation-von-java"},{"name":"Einrichtung der Entwicklungsumgebung","index":6,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/einrichtung-der-entwicklungsumgebung.md","href":"/entwicklung/einrichtung-der-entwicklungsumgebung"},{"name":"Bedienung von Eclipse","index":7,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/bedienung-von-eclipse.md","href":"/entwicklung/bedienung-von-eclipse"},{"name":"Spielervorlage erweitern","index":7,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/simpleclient-erweitern.md","href":"/entwicklung/simpleclient-erweitern"},{"name":"Idee implementieren","index":8,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/eine-idee-implementieren.md","href":"/entwicklung/eine-idee-implementieren"},{"name":"Computerspieler abgabefertig machen","index":9,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/abgabe.md","href":"/entwicklung/abgabe"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/index.md","href":"/entwicklung"},{"name":"Allgemeine XML-Dokumentation","index":4,"isEmpty":true,"pages":[{"name":"Einführung in XML","index":1,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/xml/intro.md","href":"/xml/intro"},{"name":"XML-Protokoll","index":2,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/xml/protokoll.md","href":"/xml/protokoll"},{"name":"Verwaltung von Spielen mittels authentifiziertem  Client","index":3,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/xml/administration.md","href":"/xml/administration"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/xml/index.md","href":"/xml"}],"pages":[{"name":"Überblick","index":1,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/index.md","href":"/"},{"name":"Technische Grundlagen","index":2,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/glossar.md","href":"/glossar"},{"name":"Die Software-Challenge","index":3,"expanded":true,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/wettbewerb.md","href":"/wettbewerb"},{"name":"Wettkampfmodalitäten","index":3,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/wettkampf.md","href":"/wettkampf"},{"name":"F.A.Q.","index":4,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/faq.md","href":"/faq"}]}},"__N_SSG":true}