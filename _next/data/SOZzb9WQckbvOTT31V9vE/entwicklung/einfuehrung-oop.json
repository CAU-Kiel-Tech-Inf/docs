{"pageProps":{"locale":"de","markdown":"\n# Einführung in die objektorientierte Programmierung\n\n\"Wenn man heute einen Computer kauft, ist er morgen schon veraltet\".\nKaum ein anderes Gerücht hält sich so stark in der Informatik, wie das\nüber die Kurzlebigkeit. Jedoch gibt es gerade im Bereich der\nSoftwareentwicklung Programmiertechniken und -konzepte, die seit\nJahrzehnten nichts von ihrer Aktualität eingebüßt haben. Ein Beispiel\ndafür ist die Objektorientierung. Sie wurde bereits Mitte der 80er Jahre\nentwickelt und ist auch heute noch das Grundkonzept moderner\nProgrammiersprachen.\n\n## Idee der Objektorientierung\n\nDie Idee der Objektorientierung ist, die Daten und die Funktionen, die\nauf diese Daten zugreifen, in einer Komponente zu bündeln. Auf die Daten\nkann man nur über die entsprechenden Funktionen (die man *Methoden*\nnennt) zugreifen.\n\n### Vorgehensweise ohne Objektorientierung\n\nMöchte man zum Beispiel ein Konto ohne Objektorientierung schreiben, so\nbraucht man eine Integer-Variable `int kontostand = 0;`, die Auskunft\nüber den verfügbaren Saldo (z.B. in Cent) gibt. Ein- und Auszahlungen\nlassen sich durch direkte Wertzuweisungen vornehmen:\n`kontostand = kontostand + 30;`. Soweit sogut, aber wie werden\nAuszahlungen gehandhabt? Eine Auszahlung soll nur möglich sein, wenn das\nKonto ausreichend gedeckt ist:\n```java\n    // Beispiel um 40 Geldeinheiten abzuheben\n    if (kontostand >= 40) {\n        kontostand = kontostand - 40;\n    }\n```\nJedes Mal, wenn Geld abgehoben werden soll, muss erst überprüft werden,\nob das Konto ausreichend gedeckt ist. Sollte man die if-Abfrage nur an\neiner Stelle vergessen, läuft man Gefahr, dass der Saldo negativ wird,\nwas nicht möglich sein soll.\n\nEs gibt aber noch weitere Probleme: Durch\n`kontostand = kontostand + (-25);` kann man quasi durch Einzahlung eines\nnegativen Betrages den Saldo ins Negative treiben. Dies ist in\nzweifacher Weise kritisch, da zum einen der Kontostand negativ werden\nkann und es zum anderen keine negativen Einzahlungen geben soll. Also\nmüssen auch Einzahlungen auf ihre Gültigkeit überprüft werden.\n\nEin weiteres Problem könnte z.B. entstehen, wenn man dem Kontoinhaber\neinen Dispokredit einräumen will. Dann muss man in jeder if-Abfrage den\nDispobetrag hinzufügen. Sollte das an einer Stelle vergessen werden,\nkann man unter Umständen nichts abheben, obwohl der Dispo noch nicht\nvoll genutzt ist.\n\n### Objektorientiert arbeiten\n\nMöchte man ein Konto objektorientiert darstellen, schreibt man zunächst\neine *Klasse*, die eine Art Bauplan ist:\n\n```java\n    public class Konto {\n        private int kontostand;\n\n        public Konto() {\n            kontostand = 0;\n        }\n\n        public void einzahlen(int betrag) {\n            if (betrag > 0) {\n                kontostand = kontostand + betrag;\n            }\n        }\n\n        public boolean abheben(int betrag) {\n            if (kontostand >= betrag) {\n                kontostand = kontostand - betrag;\n                return true;\n            }\n            return false;\n        }\n\n        public int getKontostand() {\n            return kontostand;\n        }\n    }\n```\n\nDas Wort `private` vor der Variablen für den Kontostand bedeutet, dass\nder Zugriff darauf nur innerhalb der Klasse gestattet ist, während\n`public` Zugriff von überall erlaubt. Möchte man also Geld einzahlen\noder abheben, muss man die entsprechenden Methoden nehmen.\n\nMit dem Schlüsselwort `new` kann man aus dem Bauplan (also der Klasse)\nein Objekt erzeugen:\n\n```java\n    Konto konto1 = new Konto(); // Erzeugt ein Konto-Objekt und speichert es in der Variablen konto1\n    Konto konto2 = new Konto(); // Erzeugt noch ein Konto und speichert es in einer anderen Variablen\n```\n\nDas `new` führt den Konstruktor aus\n(`public Konto() { kontostand = 0; }`). Also hat jedes neu erstellte\nKonto zunächst Kontostand von 0 Geldeinheiten. Ein Konstruktor muss\nimmer den Klassennamen tragen und darf keinen Rückgabewert (nicht einmal\n`void`) haben. Analog zu Methoden kann man auch einem Konstruktor\nArgumente übergeben.\n\nUm Geld einzuzahlen oder abzuheben, ruft man die Methoden mit dem sog.\nPunktoperator auf:\n\n```java\n    Konto konto1 = new Konto();            // konto: 0 Geldeinheiten (GE)\n    Konto konto2 = new Konto();            // konto2: 0 GE\n\n    konto1.einzahlen(100);                 // konto1: 100 GE, konto2: 0  GE\n    konto2.einzahlen(50);                  // konto1: 100 GE, konto2: 50 GE\n\n    boolean erfolg = konto1.auszahlen(30); // konto1: 70 GE, konto2: 50 GE, erfolg: true\n    erfolg = konto2.auszahlen(90);         // konto1: 70 GE, konto2: 50 GE, erfolg: false\n```\nDie Erweiterung der Klasse um den Dispokredit erweist sich auch als sehr\neinfach, da nur noch Änderungen in der Klasse notwendig sind:\n\n```java\n    class Konto {\n         private int kontostand;\n         private int dispo; \n\n         public Konto() {\n             kontostand = 0;\n             dispo = 500; \n         }\n\n         public void einzahlen(int betrag) {\n             if (betrag > 0) {\n                 kontostand = kontostand + betrag;\n             }\n         }\n\n         public boolean abheben(int betrag) {\n             if ((kontostand + dispo) >= betrag) { \n                 kontostand = kontostand - betrag;\n                 return true;\n             }\n             return false;\n         }\n\n         public int getKontostand() {\n             return kontostand;\n         }\n    }\n```\n-   Neue private Variable um den Kreditrahmen zu speichern.\n\n-   Kreditrahmen im Konstruktor initialisieren.\n\n-   Kreditrahmen beim Abheben mit berücksichtigen.\n\n### Referenzierung von Objekten\n\nWenn man mit `Konto konto3 = new Konto()` ein neues Objekt erzeugt, wird\ndieses im Arbeitsspeicher abgelegt und die Variable `konto3` enthält die\nSpeicheradresse zum entsprechenden Objekt. Mit dem Befehl\n`Konto konto4 = konto3` wird der Variablen `konto4` die Speicheradresse\nvon `konto3` zugewiesen. Beide zeigen also auf dieselbe Speicheradresse\nund somit auf das gleiche Objekt. Somit verändert `konto3.einzahlen(40)`\nauch den Kontostand von `konto4`, weil beide auf dasselbe Objekt zeigen.\nStatt *zeigen* sagt man oft auch *referenzieren*.\n\n**Merkregel:** Neue Objekte erzeugt man nur mit dem Schlüsselwort\n`new`!  \n\n## Vererbung\n\nDie Vererbung ist eine Technik, mit der man eine Klasse, durch\nHinzufügen von Methoden und Variablen, einen neuen Bauplan (Klasse)\nerzeugt.\n\nMöchte man zum Beispiel zusätzlich auch noch ein Premiumkonto anbieten,\nauf dem der Kontostand verzinst wird, kann man die bestehende Klasse\nnehmen und entsprechend erweitern:\n\n```java\n    public class PremiumKonto extends Konto {\n         private double zinsbetrag;\n\n         public PremiumKonto() {\n             super();\n             zinsbetrag = 2.5d; // 2.5% Zinsen\n         }\n\n         public void zinsenGutschreiben() {\n             int saldo = getKontostand();\n             if (saldo > 0) {\n                 einzahlen(saldo * zinsbetrag / 100);\n             }\n         }\n    }\n```\n\nDie Methoden zum Ein- und Auszahlen brauchen nicht neu geschrieben\nwerden, da diese von der Klasse Konto \"kopiert\" werden. Man kann eine\nMethode aus einer Oberklasse neu schreiben. Dann wird immer die\ngeänderte Version genommen. Das Schlüsselwort `super()` ruft den\nKonstruktor aus der Kontoklasse auf. In Java wird immer der leere\nKonstruktor der Oberklasse aufgerufen, sodass diese Zeile auch\nweggelassen werden darf.\n\nEin neues Objekt erzeugt man auf die gleiche Weise, wie bei einem\nnormalen Konto:\n\n```java\n    PremiumKonto premium = new PremiumKonto();\n\n    premium.einzahlen(50); //geerbte Methode\n    premium.zinsenGutschreiben();\n```\n\n### Casting von Objekten\n\nDa ein Premiumkonto auch ein normales Konto ist, ist der folgende Aufruf\nlegal:\n\n`Konto konto5 = new PremiumKonto();`\n\nWeil `konto5` vom Typ `Konto` ist, dürfen auch nur die Methoden aus\ndieser Klasse verwendet werden. Möchte man auch Zinsen gutschreiben\nkönnen, so muss aus dem Konto ein Premiumkonto gemacht werden:\n\n`PremiumKonto konto6 = (PremiumKonto) konto5;`\n\nDieser Cast gelingt jedoch nur, wenn das Konto auch ein Premiumkonto\nist! Sonst wird eine Fehlermeldung geworfen. Mit dem Schlüsselwort\n`instanceof` kann man abfragen, ob ein Objekt zu einer gewissen Klasse\ngehört:\n\n```java\n    Konto konto7 = new PremiumKonto();\n\n    if (konto6 instanceof PremiumKonto) {\n        Premiumkonto premium2 = (PremiumKonto) konto7;\n        premium2.zinsenGutschreiben();\n    }\n```\n\n**Wichtig:** Es werden nur Methoden vererbt, jedoch keine Variablen!\nDeshalb wird auf den Kontostand nur über die entsprechenden Methoden der\nOberklasse zugegriffen.\n\n## Statische Variablen und Methoden\n\nGibt es Methoden oder Variablen, die für alle Objekte gültig sind, so\nwerden diese als statisch (`static`) deklariert. Statische Variablen und\nKlassen werden von allen Objekten geteilt.\n\nSoll zum Beispiel der Zinssatz beim Premiumkonto für alle Konten gleich\nsein, kann man diesen als statisch deklarieren:\n\n```java\n    public class PremiumKonto extends Konto {\n         private static double zinsbetrag = 2.5d; // 2.5% Zinsen\n\n         ...\n\n         public static double getZinsbetrag() {\n             return zinsbetrag;\n         }\n\n         public static void setZinsbetrag(double wert) {\n             zinsbetrag = wert;\n         }\n     }\n```\n\nVon außen kommt man an den Zinsbetrag über die Methode\n`setZinsbetrag(double wert)`, die man entweder über das Objekt oder über\nden Klassennamen aufrufen darf.\n\n```java\n    PremiumKonto.setZinsbetrag(3d); // Zinsen auf 3% erhöhen\n\n    PremiumKonto premium3 = new PremiumKonto();\n    premium3.setZinsbetrag(3d);\n```\n\n**Tipp:** Damit man besser erkennen kann, dass es sich um statische\nVariablen oder Methoden handelt, sollte man auf diese immer über den\nKlassennamen zugreifen.\n\n## Weitere Aspekte\n\nDie Objektorientierung bietet noch viele weitere Aspekte, wie zum\nBeispiel die Polymorphie. Da es sich hier nur um eine Einführung\nhandelt, wurden solche fortgeschrittenen Themen allerdings nicht\nbehandelt.\n\n## Weiterführende Informationen\n\n-   [Eintrag aus der\n    Wikipedia](http://de.wikipedia.org/wiki/Objektorientierte_Programmierung)\n\n-   [Praxisbuch Objektorientierung\n    (openbook)](http://openbook.rheinwerk-verlag.de/oop/)\n","data":{"name":"Objektorientierte Programmierung","index":3},"navigation":{"next":{"name":"Sauberer Programmierstil","index":4,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/sauberer-programmierstil.md","href":"/entwicklung/sauberer-programmierstil"},"current":{"name":"Objektorientierte Programmierung","index":3,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/einfuehrung-oop.md","href":"/entwicklung/einfuehrung-oop"},"previous":{"name":"Entwicklung","index":2,"isEmpty":false,"pages":[{"name":"Objektorientierte Programmierung","index":3,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/einfuehrung-oop.md","href":"/entwicklung/einfuehrung-oop"},{"name":"Sauberer Programmierstil","index":4,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/sauberer-programmierstil.md","href":"/entwicklung/sauberer-programmierstil"},{"name":"Installation von Java","index":5,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/installation-von-java.md","href":"/entwicklung/installation-von-java"},{"name":"Einrichtung der Entwicklungsumgebung","index":6,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/einrichtung-der-entwicklungsumgebung.md","href":"/entwicklung/einrichtung-der-entwicklungsumgebung"},{"name":"Bedienung von Eclipse","index":7,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/bedienung-von-eclipse.md","href":"/entwicklung/bedienung-von-eclipse"},{"name":"Spielervorlage erweitern","index":7,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/simpleclient-erweitern.md","href":"/entwicklung/simpleclient-erweitern"},{"name":"Idee implementieren","index":8,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/eine-idee-implementieren.md","href":"/entwicklung/eine-idee-implementieren"},{"name":"Computerspieler abgabefertig machen","index":9,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/abgabe.md","href":"/entwicklung/abgabe"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/index.md","href":"/entwicklung"},"sections":[{"name":"Die Software-Challenge","index":0,"isEmpty":false,"pages":[{"name":"Wettkampfmodalitäten","index":2,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/allgemein/wettkampf.md","href":"/allgemein/wettkampf"},{"name":"Das Spiel kennenlernen","index":3,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/allgemein/spiel.md","href":"/allgemein/spiel"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/allgemein/index.md","href":"/allgemein"},{"name":"Spiele","index":1,"virtual":true,"isEmpty":true,"pages":[],"sections":[{"name":"Hey, Danke für den Fisch!","index":1,"isEmpty":false,"pages":[{"name":"Spielregeln","index":1,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/penguins/regeln.md","href":"/spiele/penguins/regeln"},{"name":"XML-Schnittstelle","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/penguins/xml.md","href":"/spiele/penguins/xml"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/penguins/index.md","href":"/spiele/penguins"},{"name":"Mississippi Queen","index":2,"isEmpty":false,"pages":[{"name":"regeln","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/mississippi-queen/regeln.md","href":"/spiele/mississippi-queen/regeln"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/mississippi-queen/index.md","href":"/spiele/mississippi-queen"},{"name":"Blokus","hide":true,"isEmpty":false,"pages":[],"sections":[{"name":"Spielregeln","hide":true,"isEmpty":true,"pages":[{"name":"content","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/spielregeln/content.md","href":"/spiele/blokus/spielregeln/content"},{"name":"regeln","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/spielregeln/regeln.md","href":"/spiele/blokus/spielregeln/regeln"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/spielregeln/index.md","href":"/spiele/blokus/spielregeln"},{"name":"XML-Dokumentation","hide":true,"isEmpty":true,"pages":[{"name":"einleitung-xml","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/einleitung-xml.md","href":"/spiele/blokus/xml-dokumentation/einleitung-xml"},{"name":"spiel-betreten","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spiel-betreten.md","href":"/spiele/blokus/xml-dokumentation/spiel-betreten"},{"name":"spiel-verlassen","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spiel-verlassen.md","href":"/spiele/blokus/xml-dokumentation/spiel-verlassen"},{"name":"spielergebnis","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spielergebnis.md","href":"/spiele/blokus/xml-dokumentation/spielergebnis"},{"name":"spielstatus","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spielstatus.md","href":"/spiele/blokus/xml-dokumentation/spielstatus"},{"name":"spielsteine","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spielsteine.md","href":"/spiele/blokus/xml-dokumentation/spielsteine"},{"name":"spielverlauf","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spielverlauf.md","href":"/spiele/blokus/xml-dokumentation/spielverlauf"},{"name":"xml-dokumentation","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/xml-dokumentation.md","href":"/spiele/blokus/xml-dokumentation/xml-dokumentation"},{"name":"zuege-senden","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/zuege-senden.md","href":"/spiele/blokus/xml-dokumentation/zuege-senden"},{"name":"zug-anforderung","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/zug-anforderung.md","href":"/spiele/blokus/xml-dokumentation/zug-anforderung"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/index.md","href":"/spiele/blokus/xml-dokumentation"}],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/index.md","href":"/spiele/blokus"},{"name":"Hase und Igel","hide":true,"isEmpty":false,"pages":[],"sections":[{"name":"Spielregeln","hide":true,"isEmpty":true,"pages":[{"name":"beispiel","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/beispiel.md","href":"/spiele/hase-und-igel/spielregeln/beispiel"},{"name":"felder","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/felder.md","href":"/spiele/hase-und-igel/spielregeln/felder"},{"name":"regeln","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/regeln.md","href":"/spiele/hase-und-igel/spielregeln/regeln"},{"name":"spielbeginn","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/spielbeginn.md","href":"/spiele/hase-und-igel/spielregeln/spielbeginn"},{"name":"spielende","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/spielende.md","href":"/spiele/hase-und-igel/spielregeln/spielende"},{"name":"zuege","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/zuege.md","href":"/spiele/hase-und-igel/spielregeln/zuege"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/index.md","href":"/spiele/hase-und-igel/spielregeln"},{"name":"Tutorial","hide":true,"isEmpty":true,"pages":[{"name":"board","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/board.md","href":"/spiele/hase-und-igel/tutorial/board"},{"name":"game-rule-logic","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/game-rule-logic.md","href":"/spiele/hase-und-igel/tutorial/game-rule-logic"},{"name":"player","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/player.md","href":"/spiele/hase-und-igel/tutorial/player"},{"name":"start","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/start.md","href":"/spiele/hase-und-igel/tutorial/start"},{"name":"tutorial","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/tutorial.md","href":"/spiele/hase-und-igel/tutorial/tutorial"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/index.md","href":"/spiele/hase-und-igel/tutorial"},{"name":"XML-Dokumentation","hide":true,"isEmpty":true,"pages":[{"name":"einleitung-xml","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/einleitung-xml.md","href":"/spiele/hase-und-igel/xml-dokumentation/einleitung-xml"},{"name":"fehler","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/fehler.md","href":"/spiele/hase-und-igel/xml-dokumentation/fehler"},{"name":"spiel-betreten","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/spiel-betreten.md","href":"/spiele/hase-und-igel/xml-dokumentation/spiel-betreten"},{"name":"spiel-verlassen","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/spiel-verlassen.md","href":"/spiele/hase-und-igel/xml-dokumentation/spiel-verlassen"},{"name":"spielergebnis","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/spielergebnis.md","href":"/spiele/hase-und-igel/xml-dokumentation/spielergebnis"},{"name":"spielstatus","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/spielstatus.md","href":"/spiele/hase-und-igel/xml-dokumentation/spielstatus"},{"name":"spielverlauf","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/spielverlauf.md","href":"/spiele/hase-und-igel/xml-dokumentation/spielverlauf"},{"name":"xml-dokumentation","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/xml-dokumentation.md","href":"/spiele/hase-und-igel/xml-dokumentation/xml-dokumentation"},{"name":"zuege-senden","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/zuege-senden.md","href":"/spiele/hase-und-igel/xml-dokumentation/zuege-senden"},{"name":"zug-anforderung","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/zug-anforderung.md","href":"/spiele/hase-und-igel/xml-dokumentation/zug-anforderung"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/index.md","href":"/spiele/hase-und-igel/xml-dokumentation"}],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/index.md","href":"/spiele/hase-und-igel"},{"name":"Hive","hide":true,"isEmpty":false,"pages":[],"sections":[{"name":"Spielregeln","hide":true,"isEmpty":true,"pages":[{"name":"regeln","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/spielregeln/regeln.md","href":"/spiele/hive/spielregeln/regeln"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/spielregeln/index.md","href":"/spiele/hive/spielregeln"},{"name":"XML-Dokumention","hide":true,"isEmpty":true,"pages":[{"name":"einleitung-xml","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/einleitung-xml.md","href":"/spiele/hive/xml-dokumentation/einleitung-xml"},{"name":"fehler","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/fehler.md","href":"/spiele/hive/xml-dokumentation/fehler"},{"name":"spiel-betreten","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/spiel-betreten.md","href":"/spiele/hive/xml-dokumentation/spiel-betreten"},{"name":"spiel-verlassen","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/spiel-verlassen.md","href":"/spiele/hive/xml-dokumentation/spiel-verlassen"},{"name":"spielergebnis","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/spielergebnis.md","href":"/spiele/hive/xml-dokumentation/spielergebnis"},{"name":"spielstatus","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/spielstatus.md","href":"/spiele/hive/xml-dokumentation/spielstatus"},{"name":"spielverlauf","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/spielverlauf.md","href":"/spiele/hive/xml-dokumentation/spielverlauf"},{"name":"xml-dokumentation","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/xml-dokumentation.md","href":"/spiele/hive/xml-dokumentation/xml-dokumentation"},{"name":"zuege-senden","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/zuege-senden.md","href":"/spiele/hive/xml-dokumentation/zuege-senden"},{"name":"zug-anforderung","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/zug-anforderung.md","href":"/spiele/hive/xml-dokumentation/zug-anforderung"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/index.md","href":"/spiele/hive/xml-dokumentation"}],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/index.md","href":"/spiele/hive"},{"name":"Ostseeschach","hide":true,"isEmpty":false,"pages":[{"name":"regeln","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/ostseeschach/regeln.md","href":"/spiele/ostseeschach/regeln"},{"name":"xml-dokumentation","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/ostseeschach/xml-dokumentation.md","href":"/spiele/ostseeschach/xml-dokumentation"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/ostseeschach/index.md","href":"/spiele/ostseeschach"},{"name":"Piranhas","hide":true,"isEmpty":false,"pages":[],"sections":[{"name":"Spielregeln","hide":true,"isEmpty":true,"pages":[{"name":"regeln","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/spielregeln/regeln.md","href":"/spiele/piranhas/spielregeln/regeln"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/spielregeln/index.md","href":"/spiele/piranhas/spielregeln"},{"name":"XML-Dokumentation","hide":true,"isEmpty":true,"pages":[{"name":"einleitung-xml","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/einleitung-xml.md","href":"/spiele/piranhas/xml-dokumentation/einleitung-xml"},{"name":"fehler","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/fehler.md","href":"/spiele/piranhas/xml-dokumentation/fehler"},{"name":"spiel-betreten","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/spiel-betreten.md","href":"/spiele/piranhas/xml-dokumentation/spiel-betreten"},{"name":"spiel-verlassen","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/spiel-verlassen.md","href":"/spiele/piranhas/xml-dokumentation/spiel-verlassen"},{"name":"spielergebnis","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/spielergebnis.md","href":"/spiele/piranhas/xml-dokumentation/spielergebnis"},{"name":"spielstatus","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/spielstatus.md","href":"/spiele/piranhas/xml-dokumentation/spielstatus"},{"name":"spielverlauf","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/spielverlauf.md","href":"/spiele/piranhas/xml-dokumentation/spielverlauf"},{"name":"xml-dokumentation","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/xml-dokumentation.md","href":"/spiele/piranhas/xml-dokumentation/xml-dokumentation"},{"name":"zuege-senden","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/zuege-senden.md","href":"/spiele/piranhas/xml-dokumentation/zuege-senden"},{"name":"zug-anforderung","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/zug-anforderung.md","href":"/spiele/piranhas/xml-dokumentation/zug-anforderung"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/index.md","href":"/spiele/piranhas/xml-dokumentation"}],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/index.md","href":"/spiele/piranhas"}],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/index.md","href":"/spiele"},{"name":"Entwicklung","index":2,"isEmpty":false,"pages":[{"name":"Objektorientierte Programmierung","index":3,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/einfuehrung-oop.md","href":"/entwicklung/einfuehrung-oop"},{"name":"Sauberer Programmierstil","index":4,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/sauberer-programmierstil.md","href":"/entwicklung/sauberer-programmierstil"},{"name":"Installation von Java","index":5,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/installation-von-java.md","href":"/entwicklung/installation-von-java"},{"name":"Einrichtung der Entwicklungsumgebung","index":6,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/einrichtung-der-entwicklungsumgebung.md","href":"/entwicklung/einrichtung-der-entwicklungsumgebung"},{"name":"Bedienung von Eclipse","index":7,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/bedienung-von-eclipse.md","href":"/entwicklung/bedienung-von-eclipse"},{"name":"Spielervorlage erweitern","index":7,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/simpleclient-erweitern.md","href":"/entwicklung/simpleclient-erweitern"},{"name":"Idee implementieren","index":8,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/eine-idee-implementieren.md","href":"/entwicklung/eine-idee-implementieren"},{"name":"Computerspieler abgabefertig machen","index":9,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/abgabe.md","href":"/entwicklung/abgabe"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/index.md","href":"/entwicklung"}],"pages":[{"name":"Start","index":1,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/index.md","href":"/"},{"name":"Technische Grundlagen","index":2,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/glossar.md","href":"/glossar"},{"name":"Lesezeichen","index":3,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/bookmark.md","href":"/bookmark"},{"name":"F.A.Q.","index":4,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/faq.md","href":"/faq"}]}},"__N_SSG":true}