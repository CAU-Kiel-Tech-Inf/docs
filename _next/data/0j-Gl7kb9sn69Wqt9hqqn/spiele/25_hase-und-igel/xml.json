{"pageProps":{"locale":"de","markdown":"\n# Software-Challenge XML-Dokumentation Hase und Igel\n\nZiel dieser Dokumentation ist es,\ndie XML-Schnittstelle der Software-Challenge 2024/25 festzuhalten.\n\n## Spiel betreten\n\nWenn begonnen wird mit dem Server zu kommunizieren, muss zuallererst\n\n    <protocol>\n\ngesendet werden, um die Kommunikation zu beginnen.\n\n### Ohne Reservierungscode\n\nBetritt ein beliebiges offenes Spiel:\n\n    <join gameType=\"swc_2018_hase_und_igel\"/>\n\nSollte kein Spiel offen sein, wird so ein neues erstellt. Je nachdem ob\npaused in server.properties true oder false ist, wird das Spiel pausiert\ngestartet oder nicht. Der Server antwortet darauf mit:\n\n-   ROOM\\_ID Id des GameRooms\n\n<!-- -->\n\n    <joined roomId=\"ROOM_ID\"/>\n\nAlle administrativen Clients werden ebenfalls darüber benachrichtigt und\nerhalten folgende Nachricht:\n\n-   ROOM\\_ID Id des GameRooms\n\n<!-- -->\n\n    <joinedGameRoom roomId=\"ROOM_ID\" existing=\"false\"/>\n\nFalls bereits ein GameRoom offen war, ist dementsprechend existing true.\n\n### Mit Reservierungscode\n\nIst ein Reservierungscode gegeben, so kann man den durch den Code\ngegebenen Platz betreten.\n\n#### Join mit RC\n\n-   RC Reservierungscode\n\n<!-- -->\n\n    <joinPrepared reservationCode=\"RC\"/>\n\n#### Welcome Message\n\nDer Server antwortet darauf nur, wenn der zweite :t[Computerspieler]{#player} ebenfalls\nverbunden ist:\n\n-   ROOM\\_ID Id des GameRooms\n\n-   COLOR Spielerfarbe also red oder blue\n\n-   status GameState wie in [Status](#status)\n\n<!-- -->\n\n    <joined roomId=\"ROOM_ID\"/>\n    <room roomId=\"ROOM_ID\">\n      <data class=\"welcomeMessage\" color=\"COLOR\"></data>\n    </room>\n    <room roomId=\"ROOM_ID\">\n      <data class=\"memento\">\n        status\n      </data>\n    </room>\n\n## Züge senden\n\n### Der Move\n\nDer Move ist die Antwort auf den MoveRequest des Servers.\n\n#### MoveRequest\n\n-   ROOM\\_ID Id des GameRooms\n\n<!-- -->\n\n    <room roomId=\"ROOM_ID\">\n      <data class=\"sc.framework.plugins.protocol.MoveRequest\"/>\n    </room>\n\n#### Senden\n\nDer Move ist der allgemeine Zug, der in verschiedenen Varianten gesendet\nwerden kann.\n\n-   ROOM\\_ID Id des GameRooms\n\n-   ZUG Zug wie in [ZUG](#zug)\n\n<!-- -->\n\n    <room roomId=\"ROOM_ID\">\n      ZUG\n    </room>\n\n### ZUG\n\n-   ACTION Aktionen wie in [ACTION](#action)\n\n<!-- -->\n\n    <data class=\"move\">\n      ACTION\n      ..\n      ACTION\n    </move>\n\n### ACTION\n\nMögliche Aktionen:\n\n-   I Index der Aktion beginnend mit 0\n\n-   D Anzahl der Felder um die sich bewegt wird\n\n-   W -10 oder 10\n\n-   V 20,0,-20 falls type TAKE\\_OR\\_DROP\\_CARROTS, 0 sonst\n\n<!-- -->\n\n    <advance order=\"I\" distance=\"D\"/>\n    <card order=\"I\" type=\"CARD_TYPE\" value=\"V\"/>\n    <exchangeCarrots order=\"I\" value=\"W\"/>\n    <eatSalad order=\"I\"/>\n    <fallBack order=\"I\"/>\n    <skip order=\"I\"/>\n\n### Debughints\n\nZügen können Debug-Informationen beigefügt werden:\n\n    <hint content=\"S\"/>\n\nDamit sieht beispielsweise ein Laufzug so aus:\n\n    <room roomId=\"ROOM_ID\">\n      <data class=\"move\">\n        <advance order=\"0\" distance=\"1\"/>\n        <card order=\"1\" type=\"EAT_SALAD\" value=\"0\"/>\n        <hint content=\"Dies ist ein Hint.\"/>\n        <hint content=\"noch ein Hint\"/>\n      </data>\n    </room>\n\n## Spielstatus\n\nEs folgt die Beschreibung des Spielstatus, der vor jeder Zugaufforderung\nan die Clients gesendet wird. Das Spielstatus-Tag ist dabei noch in\neinem *data*-Tag der Klasse *memento* gewrappt:\n\n### memento\n\n-   ROOM\\_ID Id des GameRooms\n\n-   status Gamestate wie in [Status](#status)\n\n<!-- -->\n\n    <room roomId=\"ROOM_ID\">\n      <data class=\"memento\">\n        status\n      </data>\n    </room>\n\n### Status\n\n-   Z aktuelle Zugzahl\n\n-   S Spieler, der das Spiel gestartet hat (RED/BLUE)\n\n-   C Spieler, der an der Reihe ist (RED/BLUE)\n\n-   red, blue wie in [Spieler](#spieler) definiert\n\n-   board Das Spielbrett, wie in [Spielbrett](#spielbrett) definiert\n\n-   lastMove Letzter getätigter Zug (nicht in der ersten Runde), wie in\n    [Letzter Zug](#letzter-zug) definiert\n\n-   condition Spielergebnis, wie in [Spielergebnis](#spielende)\n    definiert; nur zum Spielende\n\n<!-- -->\n\n    <state class=\"state\" turn=\"Z\" startPlayer=\"S\" currentPlayer=\"C\">\n      red\n      blue\n      [board]\n      [lastMove]\n      [condition]\n    </state>\n\n### Spieler\n\n-   C Farbe (red/blue)\n\n-   N Anzeigename\n\n-   I Feldindex des Spielers\n\n-   S Anzahl Salate\n\n-   K Anzahl der Karotten\n\n<!-- -->\n\n    <C displayName=\"N\" color=\"C\" index=\"I\" carrots=\"K\" salads=\"S\">\n      <cards>\n        <type>TAKE_OR_DROP_CARROTS</type>\n        <type>EAT_SALAD</type>\n        <type>HURRY_AHEAD</type>\n        <type>FALL_BACK</type>\n      </cards>\n      <lastNonSkipAction class=\"fallBack\" order=\"0\"/> // Beispiel für letzte Aktion\n    </C>\n\n### Spielbrett\n\n-   FIELD Ein Spielfeld wie in [Spielfeld](#spielfeld) definiert.\n\n<!-- -->\n\n    <board>\n      <fields index=\"0\" type=\"START\"/>\n      ..\n      FIELD\n      ..\n      <fields index=\"64\" type=\"GOAL\"/>\n    </board>\n\n### Spielfeld\n\n-   I Feldnummer\n\n-   TYPE Typ des Feldes\n    (START/CARROT/HARE/GOAL/POSITION\\_{X}/HEDGEHOG/SALAD). X ist 1 oder\n    2\n\n<!-- -->\n\n    <fields index=\"I\" type=\"TYPE\"/>\n\n### Letzter Zug\n\nDer letzte Zug ist ein Move (siehe hierzu [ZUG](#zug)).\n\n-   ACTIONS Teilzüge des Zuges (siehe hierzu [ACTION](#action)).\n\n<!-- -->\n\n    <lastMove>\n      ACTIONS\n    </lastMove>\n\n## Zug-Anforderung\n\nEine einfache Nachricht fordert zum Zug auf:\n\n    <room roomId=\"RID\">\n      <data class=\"sc.framework.plugins.protocol.MoveRequest\"/>\n    </room>\n\n## Fehler\n\nEin “spielfähiger” :t[Computerspieler]{#player} muss nicht mit Fehlern umgehen können.\nFehlerhafte Züge beispielsweise resultieren in einem vorzeitigen Ende\ndes Spieles, das im nächsten gesendeten Gamestate erkannt werden kann\n(siehe [Spielergebnis](#spielende)).\n\n-   MSG Fehlermeldung\n\n<!-- -->\n\n    <room roomId=\"RID\">\n      <error message=\"MSG\">\n        <originalRequest>\n        Request, der den Fehler verursacht hat\n        </originalRequest>\n      </error>\n    </room>\n\n## Spiel verlassen\n\nWenn ein :t[Computerspieler]{#player} den Raum verlässt, bekommen die anderen Clients eine\nentsprechende Meldung vom Server.\n\n-   ROOM\\_ID Id des GameRooms\n\n<!-- -->\n\n    <left roomId=\"ROOM_ID\"/>\n\n## Spielergebnis\n\nZum Spielende enthält der Spieler das Ergebnis:\n\n-   ROOM\\_ID Id des GameRooms\n\n-   R1, R2 Text, der den Grund für das Spielende erklärt\n\n-   CAUSE1, CAUSE2 Grund des Spielendes\n    (REGULAR/LEFT/RULE\\_VIOLATION/SOFT\\_TIMEOUT/HARD\\_TIMEOUT)\n\n-   WP1, WP2 Siegpunkte der jeweiligen Spieler, 0 verloren, 1\n    unentschieden, 2 gewonnen\n\n-   I1, I2 Index des Feldes auf dem der Spieler steht\n\n-   C1, C2 Karotten des Spielers\n\n-   NAME Anzeigename des Spielers\n\n-   COLOR Farbe des Siegers\n\n-   I3 I1 oder I2 je nachdem wer gewonnen hat\n\n-   C3 C1 oder C2 je nachdem wer gewonnen hat\n\n-   S Salate des Siegers\n\n-   \\[cards\\] Karten des Siegers wie in [Spieler](#spieler)\n\n-   \\[lastNonSkipAction\\] Letztes Aktion des Siegers wie in\n    [Spieler](#spieler)\n\n<!-- -->\n\n    <room roomId=\"ROOM_ID\">\n      <data class=\"result\">\n        <definition>\n          <fragment name=\"Gewinner\">\n            <aggregation>SUM</aggregation>\n            <relevantForRanking>true</relevantForRanking>\n          </fragment>\n          <fragment name=\"Ø Feldnummer\">\n            <aggregation>AVERAGE</aggregation>\n            <relevantForRanking>true</relevantForRanking>\n          </fragment>\n          <fragment name=\"Ø Karotten\">\n            <aggregation>AVERAGE</aggregation>\n            <relevantForRanking>true</relevantForRanking>\n          </fragment>\n        </definition>\n        <score cause=\"CAUSE1\" reason=\"R1\">\n          <part>WP1</part>\n          <part>I1</part>\n          <part>C1</part>\n        </score>\n        <score cause=\"CAUSE2\" reason=\"R2\">\n          <part>WP2</part>\n          <part>I2</part>\n          <part>C1</part>\n        </score>\n        <winner class=\"player\" displayName=\"NAME\" color=\"COLOR\" index=\"I3\" carrots=\"C3\" salads=\"S\">\n          [cards]\n          [lastNonSkipAction]\n        </winner>\n      </data>\n    </room>\n\n## Spielverlauf\n\nDer Server startet (StandardIp: localhost 13050).\n\nNun gibt es zwei Varianten ein Spiel zu starten, eine durch einen\nAdministratorclient die andere durch hinzufügen der Spieler zu einen\nSpieltyp:\n\n### Variante 1 (AdminClient [Mit Reservierungscode](#mit-reservierungscode))\n\nEin :t[Computerspieler]{#player} registriert sich als Administrator mit dem in\nserver.properties festgelegten Passwort p:\n\n    <protocol><authenticate passphrase=\"p\"/>\n\nDann kann ein Spiel angelegt werden:\n\n    <prepare gameType=\"swc_2018_hase_und_igel\">\n      <slot displayName=\"p1\" canTimeout=\"false\" shouldBePaused=\"true\"/>\n      <slot displayName=\"p2\" canTimeout=\"false\" shouldBePaused=\"true\"/>\n    </prepare>\n\nDer Server antwortet darauf mit einer Nachricht, die die ROOM\\_ID und\nReservierungscodes für die beiden Clients enthält:\n\n    <protocol>\n      <prepared roomId=\"871faccb-5190-4e44-82fc-6cdcbb493726\">\n        <reservation>RC1</reservation>\n        <reservation>RC2</reservation>\n      </prepared>\n\nDer Administratorclient kann nur ebenfalls als Observer des Spiels\ngenutzt werden, indem ein entsprechender Request gesendet wird. Dadurch\nwird das derzeitge Spielfeld ([memento](#memento)) ebenfalls an den\nAdministratorclient gesendet.\n\n    <observe roomId=\"871faccb-5190-4e44-82fc-6cdcbb493726\"/>\n\nClients die auf dem Serverport (localhost 13050) gestartet werden können\nso über diesen Code joinen.\n\n    <protocol>\n      <joinPrepared reservationCode=\"RC1\"/>\n\n    <protocol>\n      <joinPrepared reservationCode=\"RC2\"/>\n\n### Variante 2 ((eventuell) ohne AdminClient [Ohne Reservierungscode](#ohne-reservierungscode))\n\nDie Clients wurden auf dem Serverport (Standard: localhost 13050)\ngestartet.\n\nSie können sich mit folgender Anfrage einen bereits offenen Spiel\ngleichen Typs beitreten oder, falls kein Spiel des Typs vorhanden selbst\neines starten:\n\n    <protocol>\n      <join gameType=\"swc_2018_hase_und_igel\"/>\n\nDer Server antwortet mit:\n\n    <protocol>\n      <joined roomId=\"871faccb-5190-4e44-82fc-6cdcbb493726\"/>\n\n### Weiterer Spielverlauf\n\nDer Server antwortet jeweils mit der WelcomeMessage ([Welcome\nMessage](#welcome-message)) und dem ersten GameState\n([memento](#memento)) sobald beide Spieler verbunden sind.\n\n    <room roomId=\"871faccb-5190-4e44-82fc-6cdcbb493726\">\n      <data class=\"welcomeMessage\" color=\"red\"/>\n    </room>\n    <room roomId=\"871faccb-5190-4e44-82fc-6cdcbb493726\">\n      <data class=\"memento\">\n        <state class=\"state\" turn=\"0\" startPlayer=\"RED\" currentPlayer=\"RED\">\n          <red displayName=\"Unknown\" color=\"RED\" index=\"0\" carrots=\"68\" salads=\"5\">\n            <cards>\n              <type>TAKE_OR_DROP_CARROTS</type>\n              <type>EAT_SALAD</type>\n              <type>HURRY_AHEAD</type>\n              <type>FALL_BACK</type>\n            </cards>\n          </red>\n          <blue displayName=\"Unknown\" color=\"BLUE\" index=\"0\" carrots=\"68\" salads=\"5\">\n            <cards>\n              <type>TAKE_OR_DROP_CARROTS</type>\n              <type>EAT_SALAD</type>\n              <type>HURRY_AHEAD</type>\n              <type>FALL_BACK</type>\n            </cards>\n          </blue>\n          <board>\n            <fields index=\"0\" type=\"START\"/>\n            <fields index=\"1\" type=\"CARROT\"/>\n            <fields index=\"2\" type=\"HARE\"/>\n            <fields index=\"3\" type=\"HARE\"/>\n            <fields index=\"4\" type=\"POSITION_2\"/>\n            <fields index=\"5\" type=\"POSITION_1\"/>\n            <fields index=\"6\" type=\"CARROT\"/>\n            <fields index=\"7\" type=\"CARROT\"/>\n            <fields index=\"8\" type=\"HARE\"/>\n            <fields index=\"9\" type=\"CARROT\"/>\n            <fields index=\"10\" type=\"SALAD\"/>\n            <fields index=\"11\" type=\"HEDGEHOG\"/>\n            <fields index=\"12\" type=\"HARE\"/>\n            <fields index=\"13\" type=\"CARROT\"/>\n            <fields index=\"14\" type=\"CARROT\"/>\n            <fields index=\"15\" type=\"HEDGEHOG\"/>\n            <fields index=\"16\" type=\"POSITION_1\"/>\n            <fields index=\"17\" type=\"CARROT\"/>\n            <fields index=\"18\" type=\"POSITION_2\"/>\n            <fields index=\"19\" type=\"HEDGEHOG\"/>\n            <fields index=\"20\" type=\"CARROT\"/>\n            ...\n            <fields index=\"57\" type=\"SALAD\"/>\n            <fields index=\"58\" type=\"CARROT\"/>\n            <fields index=\"59\" type=\"POSITION_1\"/>\n            <fields index=\"60\" type=\"HARE\"/>\n            <fields index=\"61\" type=\"CARROT\"/>\n            <fields index=\"62\" type=\"HARE\"/>\n            <fields index=\"63\" type=\"CARROT\"/>\n            <fields index=\"64\" type=\"GOAL\"/>\n          </board>\n        </state>\n      </data>\n    </room>\n\nDer erste Spieler erhält dann eine Zugaufforderung\n([MoveRequest](#move-request)), falls in server.properties paused auf\nfalse gesetzt wurde. Falls das Spiel pausiert ist, muss das Spiel durch\neinen Administratorclient gestartet werden:\n\nVerbinden des Administratorclients (falls es sich um die erste\nKontaktaufnahme zum Server handelt, ansonsten &lt;protocol&gt;\nweglassen).\n\n    <protocol>\n      <authenticate passphrase=\"examplepassword\"/>\n\nPausierung aufheben:\n\n    <pause roomId=\"871faccb-5190-4e44-82fc-6cdcbb493726\" pause=\"false\" />\n\nDaraufhin wird der erste Spieler aufgefordert einen Zug zu senden:\n\n    <room roomId=\"871faccb-5190-4e44-82fc-6cdcbb493726\">\n      <data class=\"sc.framework.plugins.protocol.MoveRequest\"/>\n    </room>\n\nDer :t[Computerspieler]{#player} des CurrentPlayer sendet nun einen Zug ([ZUG](#zug)):\n\n    <room roomId=\"871faccb-5190-4e44-82fc-6cdcbb493726\">\n      <data class=\"move\">\n        <advance order=\"0\" distance=\"6\">\n      </data>\n    </room>\n\nSo geht es abwechselnd weiter, bis zum Spielende\n([Spielergebnis](#spielende)). Die letzte Nachricht des Servers endet\nmit:\n\n    </protocol>\n\nDanach wird die Verbindung geschlossen.\n\n","data":{"name":"XML-Dokumentation","hide":true},"navigation":{"next":{"name":"Überblick","index":1,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/index.md","href":"/"},"current":{"name":"XML-Dokumentation","hide":true,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/25_hase-und-igel/xml.md","href":"/spiele/25_hase-und-igel/xml"},"previous":null,"sections":[{"name":"Spiele","index":1,"virtual":true,"isEmpty":true,"pages":[],"sections":[{"name":"Blokus","hide":true,"isEmpty":false,"pages":[],"sections":[{"name":"Spielregeln","hide":true,"isEmpty":true,"pages":[{"name":"content","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/spielregeln/content.md","href":"/spiele/blokus/spielregeln/content"},{"name":"regeln","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/spielregeln/regeln.md","href":"/spiele/blokus/spielregeln/regeln"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/spielregeln/index.md","href":"/spiele/blokus/spielregeln"},{"name":"XML-Dokumentation","hide":true,"isEmpty":true,"pages":[{"name":"einleitung-xml","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/einleitung-xml.md","href":"/spiele/blokus/xml-dokumentation/einleitung-xml"},{"name":"spiel-betreten","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spiel-betreten.md","href":"/spiele/blokus/xml-dokumentation/spiel-betreten"},{"name":"spiel-verlassen","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spiel-verlassen.md","href":"/spiele/blokus/xml-dokumentation/spiel-verlassen"},{"name":"spielergebnis","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spielergebnis.md","href":"/spiele/blokus/xml-dokumentation/spielergebnis"},{"name":"spielstatus","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spielstatus.md","href":"/spiele/blokus/xml-dokumentation/spielstatus"},{"name":"spielsteine","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spielsteine.md","href":"/spiele/blokus/xml-dokumentation/spielsteine"},{"name":"spielverlauf","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/spielverlauf.md","href":"/spiele/blokus/xml-dokumentation/spielverlauf"},{"name":"xml-dokumentation","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/xml-dokumentation.md","href":"/spiele/blokus/xml-dokumentation/xml-dokumentation"},{"name":"zuege-senden","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/zuege-senden.md","href":"/spiele/blokus/xml-dokumentation/zuege-senden"},{"name":"zug-anforderung","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/zug-anforderung.md","href":"/spiele/blokus/xml-dokumentation/zug-anforderung"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/xml-dokumentation/index.md","href":"/spiele/blokus/xml-dokumentation"}],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/blokus/index.md","href":"/spiele/blokus"},{"name":"Hase und Igel","hide":true,"isEmpty":false,"pages":[],"sections":[{"name":"Spielregeln","hide":true,"isEmpty":true,"pages":[{"name":"beispiel","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/beispiel.md","href":"/spiele/hase-und-igel/spielregeln/beispiel"},{"name":"felder","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/felder.md","href":"/spiele/hase-und-igel/spielregeln/felder"},{"name":"regeln","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/regeln.md","href":"/spiele/hase-und-igel/spielregeln/regeln"},{"name":"spielbeginn","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/spielbeginn.md","href":"/spiele/hase-und-igel/spielregeln/spielbeginn"},{"name":"spielende","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/spielende.md","href":"/spiele/hase-und-igel/spielregeln/spielende"},{"name":"zuege","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/zuege.md","href":"/spiele/hase-und-igel/spielregeln/zuege"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/spielregeln/index.md","href":"/spiele/hase-und-igel/spielregeln"},{"name":"Tutorial","hide":true,"isEmpty":true,"pages":[{"name":"board","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/board.md","href":"/spiele/hase-und-igel/tutorial/board"},{"name":"game-rule-logic","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/game-rule-logic.md","href":"/spiele/hase-und-igel/tutorial/game-rule-logic"},{"name":"player","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/player.md","href":"/spiele/hase-und-igel/tutorial/player"},{"name":"start","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/start.md","href":"/spiele/hase-und-igel/tutorial/start"},{"name":"tutorial","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/tutorial.md","href":"/spiele/hase-und-igel/tutorial/tutorial"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/tutorial/index.md","href":"/spiele/hase-und-igel/tutorial"},{"name":"XML-Dokumentation","hide":true,"isEmpty":true,"pages":[{"name":"einleitung-xml","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/einleitung-xml.md","href":"/spiele/hase-und-igel/xml-dokumentation/einleitung-xml"},{"name":"fehler","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/fehler.md","href":"/spiele/hase-und-igel/xml-dokumentation/fehler"},{"name":"spiel-betreten","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/spiel-betreten.md","href":"/spiele/hase-und-igel/xml-dokumentation/spiel-betreten"},{"name":"spiel-verlassen","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/spiel-verlassen.md","href":"/spiele/hase-und-igel/xml-dokumentation/spiel-verlassen"},{"name":"spielergebnis","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/spielergebnis.md","href":"/spiele/hase-und-igel/xml-dokumentation/spielergebnis"},{"name":"spielstatus","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/spielstatus.md","href":"/spiele/hase-und-igel/xml-dokumentation/spielstatus"},{"name":"spielverlauf","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/spielverlauf.md","href":"/spiele/hase-und-igel/xml-dokumentation/spielverlauf"},{"name":"xml-dokumentation","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/xml-dokumentation.md","href":"/spiele/hase-und-igel/xml-dokumentation/xml-dokumentation"},{"name":"zuege-senden","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/zuege-senden.md","href":"/spiele/hase-und-igel/xml-dokumentation/zuege-senden"},{"name":"zug-anforderung","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/zug-anforderung.md","href":"/spiele/hase-und-igel/xml-dokumentation/zug-anforderung"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/xml-dokumentation/index.md","href":"/spiele/hase-und-igel/xml-dokumentation"}],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hase-und-igel/index.md","href":"/spiele/hase-und-igel"},{"name":"Hase und Igel","expanded":true,"isEmpty":false,"pages":[{"name":"XML-Dokumentation","hide":true,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/25_hase-und-igel/xml.md","href":"/spiele/25_hase-und-igel/xml"}],"sections":[{"name":"Tutorial","hide":true,"isEmpty":true,"pages":[{"name":"board","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/25_hase-und-igel/tutorial/board.md","href":"/spiele/25_hase-und-igel/tutorial/board"},{"name":"game-rule-logic","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/25_hase-und-igel/tutorial/game-rule-logic.md","href":"/spiele/25_hase-und-igel/tutorial/game-rule-logic"},{"name":"player","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/25_hase-und-igel/tutorial/player.md","href":"/spiele/25_hase-und-igel/tutorial/player"},{"name":"start","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/25_hase-und-igel/tutorial/start.md","href":"/spiele/25_hase-und-igel/tutorial/start"},{"name":"tutorial","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/25_hase-und-igel/tutorial/tutorial.md","href":"/spiele/25_hase-und-igel/tutorial/tutorial"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/25_hase-und-igel/tutorial/index.md","href":"/spiele/25_hase-und-igel/tutorial"}],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/25_hase-und-igel/index.md","href":"/spiele/25_hase-und-igel"},{"name":"Hey, Danke für den Fisch!","hide":true,"expanded":true,"isEmpty":false,"pages":[{"name":"Spielregeln","index":1,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/penguins/regeln.md","href":"/spiele/penguins/regeln"},{"name":"XML-Schnittstelle","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/penguins/xml.md","href":"/spiele/penguins/xml"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/penguins/index.md","href":"/spiele/penguins"},{"name":"Hive","hide":true,"isEmpty":false,"pages":[],"sections":[{"name":"Spielregeln","hide":true,"isEmpty":true,"pages":[{"name":"regeln","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/spielregeln/regeln.md","href":"/spiele/hive/spielregeln/regeln"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/spielregeln/index.md","href":"/spiele/hive/spielregeln"},{"name":"XML-Dokumention","hide":true,"isEmpty":true,"pages":[{"name":"einleitung-xml","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/einleitung-xml.md","href":"/spiele/hive/xml-dokumentation/einleitung-xml"},{"name":"fehler","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/fehler.md","href":"/spiele/hive/xml-dokumentation/fehler"},{"name":"spiel-betreten","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/spiel-betreten.md","href":"/spiele/hive/xml-dokumentation/spiel-betreten"},{"name":"spiel-verlassen","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/spiel-verlassen.md","href":"/spiele/hive/xml-dokumentation/spiel-verlassen"},{"name":"spielergebnis","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/spielergebnis.md","href":"/spiele/hive/xml-dokumentation/spielergebnis"},{"name":"spielstatus","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/spielstatus.md","href":"/spiele/hive/xml-dokumentation/spielstatus"},{"name":"spielverlauf","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/spielverlauf.md","href":"/spiele/hive/xml-dokumentation/spielverlauf"},{"name":"xml-dokumentation","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/xml-dokumentation.md","href":"/spiele/hive/xml-dokumentation/xml-dokumentation"},{"name":"zuege-senden","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/zuege-senden.md","href":"/spiele/hive/xml-dokumentation/zuege-senden"},{"name":"zug-anforderung","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/zug-anforderung.md","href":"/spiele/hive/xml-dokumentation/zug-anforderung"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/xml-dokumentation/index.md","href":"/spiele/hive/xml-dokumentation"}],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/hive/index.md","href":"/spiele/hive"},{"name":"Mississippi Queen","hide":true,"isEmpty":false,"pages":[{"name":"Spielregeln","index":1,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/mississippi-queen/regeln.md","href":"/spiele/mississippi-queen/regeln"},{"name":"XML-Elemente","index":2,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/mississippi-queen/xml.md","href":"/spiele/mississippi-queen/xml"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/mississippi-queen/index.md","href":"/spiele/mississippi-queen"},{"name":"Ostseeschach","hide":true,"isEmpty":false,"pages":[{"name":"regeln","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/ostseeschach/regeln.md","href":"/spiele/ostseeschach/regeln"},{"name":"xml-dokumentation","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/ostseeschach/xml-dokumentation.md","href":"/spiele/ostseeschach/xml-dokumentation"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/ostseeschach/index.md","href":"/spiele/ostseeschach"},{"name":"Piranhas","hide":true,"isEmpty":false,"pages":[],"sections":[{"name":"Spielregeln","hide":true,"isEmpty":true,"pages":[{"name":"regeln","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/spielregeln/regeln.md","href":"/spiele/piranhas/spielregeln/regeln"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/spielregeln/index.md","href":"/spiele/piranhas/spielregeln"},{"name":"XML-Dokumentation","hide":true,"isEmpty":true,"pages":[{"name":"einleitung-xml","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/einleitung-xml.md","href":"/spiele/piranhas/xml-dokumentation/einleitung-xml"},{"name":"fehler","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/fehler.md","href":"/spiele/piranhas/xml-dokumentation/fehler"},{"name":"spiel-betreten","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/spiel-betreten.md","href":"/spiele/piranhas/xml-dokumentation/spiel-betreten"},{"name":"spiel-verlassen","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/spiel-verlassen.md","href":"/spiele/piranhas/xml-dokumentation/spiel-verlassen"},{"name":"spielergebnis","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/spielergebnis.md","href":"/spiele/piranhas/xml-dokumentation/spielergebnis"},{"name":"spielstatus","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/spielstatus.md","href":"/spiele/piranhas/xml-dokumentation/spielstatus"},{"name":"spielverlauf","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/spielverlauf.md","href":"/spiele/piranhas/xml-dokumentation/spielverlauf"},{"name":"xml-dokumentation","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/xml-dokumentation.md","href":"/spiele/piranhas/xml-dokumentation/xml-dokumentation"},{"name":"zuege-senden","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/zuege-senden.md","href":"/spiele/piranhas/xml-dokumentation/zuege-senden"},{"name":"zug-anforderung","repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/zug-anforderung.md","href":"/spiele/piranhas/xml-dokumentation/zug-anforderung"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/xml-dokumentation/index.md","href":"/spiele/piranhas/xml-dokumentation"}],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/piranhas/index.md","href":"/spiele/piranhas"}],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/spiele/index.md","href":"/spiele"},{"name":"Entwicklung eines Computerspielers","index":2,"isEmpty":false,"pages":[{"name":"Das Spiel kennenlernen","index":1,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/kennenlernen.md","href":"/entwicklung/kennenlernen"},{"name":"Objektorientierte Programmierung","index":3,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/einfuehrung-oop.md","href":"/entwicklung/einfuehrung-oop"},{"name":"Sauberer Programmierstil","index":4,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/sauberer-programmierstil.md","href":"/entwicklung/sauberer-programmierstil"},{"name":"Installation von Java","index":5,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/installation-von-java.md","href":"/entwicklung/installation-von-java"},{"name":"Einrichtung der Entwicklungsumgebung","index":6,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/einrichtung-der-entwicklungsumgebung.md","href":"/entwicklung/einrichtung-der-entwicklungsumgebung"},{"name":"Bedienung von Eclipse","index":7,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/bedienung-von-eclipse.md","href":"/entwicklung/bedienung-von-eclipse"},{"name":"Spielervorlage erweitern","index":7,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/simpleclient-erweitern.md","href":"/entwicklung/simpleclient-erweitern"},{"name":"Idee implementieren","index":8,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/eine-idee-implementieren.md","href":"/entwicklung/eine-idee-implementieren"},{"name":"Computerspieler abgabefertig machen","index":9,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/abgabe.md","href":"/entwicklung/abgabe"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/entwicklung/index.md","href":"/entwicklung"},{"name":"Allgemeine XML-Dokumentation","index":4,"isEmpty":true,"pages":[{"name":"Einführung in XML","index":1,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/xml/intro.md","href":"/xml/intro"},{"name":"XML-Protokoll","index":2,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/xml/protokoll.md","href":"/xml/protokoll"},{"name":"Verwaltung von Spielen mittels authentifiziertem  Client","index":3,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/xml/administration.md","href":"/xml/administration"}],"sections":[],"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/xml/index.md","href":"/xml"}],"pages":[{"name":"Überblick","index":1,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/index.md","href":"/"},{"name":"Technische Grundlagen","index":2,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/glossar.md","href":"/glossar"},{"name":"Die Software-Challenge","index":3,"expanded":true,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/wettbewerb.md","href":"/wettbewerb"},{"name":"F.A.Q.","index":4,"repo":"https://github.com/software-challenge/docs/tree/main/hyperbook/book/faq.md","href":"/faq"}]}},"__N_SSG":true}